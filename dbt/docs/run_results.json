{"results": [{"node": {"raw_sql": "", "database": "postgres", "schema": "analysis_seed_data", "fqn": ["malaysia_airports_analysis", "raw_airports"], "unique_id": "seed.malaysia_airports_analysis.raw_airports", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "raw_airports.csv", "original_file_path": "data/raw_airports.csv", "name": "raw_airports", "resource_type": "seed", "alias": "raw_airports", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "schema": "seed_data", "quote_columns": false}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "The OpenFlights Airports Database. See [source](https://openflights.org/data.html).\n\n_Note: this table was seeded._", "columns": {"airport_id": {"name": "airport_id", "description": "Unique OpenFlights identifier for this airport.", "meta": {}, "data_type": null, "tags": []}, "name": {"name": "name", "description": "Name of airport. May or may not contain the City name.", "meta": {}, "data_type": null, "tags": []}, "city": {"name": "city", "description": "Main city served by airport. May be spelled differently from Name.", "meta": {}, "data_type": null, "tags": []}, "country": {"name": "country", "description": "Country or territory where airport is located. See [Countries](https://openflights.org/data.html#country) to cross-reference to ISO 3166-1 codes.", "meta": {}, "data_type": null, "tags": []}, "iata": {"name": "iata", "description": "3-letter IATA code. `Null` if not assigned/unknown.", "meta": {}, "data_type": null, "tags": []}, "icao": {"name": "icao", "description": "4-letter ICAO code. `Null` if not assigned.", "meta": {}, "data_type": null, "tags": []}, "latitude": {"name": "latitude", "description": "Decimal degrees, usually to six significant digits. Negative is South, positive is North.", "meta": {}, "data_type": null, "tags": []}, "longitude": {"name": "longitude", "description": "Decimal degrees, usually to six significant digits. Negative is West, positive is East.", "meta": {}, "data_type": null, "tags": []}, "altitude": {"name": "altitude", "description": "In feet.", "meta": {}, "data_type": null, "tags": []}, "timezone": {"name": "timezone", "description": "Hours offset from UTC.\n\nFractional hours are expressed as decimals, eg. India is 5.5.", "meta": {}, "data_type": null, "tags": []}, "dst": {"name": "dst", "description": "Daylight savings time.\n\nOne of E (Europe), A (US/Canada), S (South America),\nO (Australia), Z (New Zealand), N (None) or U (Unknown).\n\nSee also: [Help: Time](https://openflights.org/help/time.html)", "meta": {}, "data_type": null, "tags": []}, "database_time_zone": {"name": "database_time_zone", "description": "Timezone in [\"tz\" (Olson) format](http://en.wikipedia.org/wiki/Tz_database), eg. \"America/Los_Angeles\".", "meta": {}, "data_type": null, "tags": []}, "type": {"name": "type", "description": "Type of the airport.\n\nValue \"airport\" for air terminals, \"station\" for train stations,\n\"port\" for ferry terminals and \"unknown\" if not known.\n\nIn this table, only type=airport is included.", "meta": {}, "data_type": null, "tags": []}, "source": {"name": "source", "description": "Source of this data.\n\n\"OurAirports\" for data sourced from [OurAirports](http://ourairports.com/data/),\n\"Legacy\" for old data not matched to OurAirports (mostly DAFIF),\n\"User\" for unverified user contributions.\n\nIn this table, only source=OurAirports is included.", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/seeds/seeds.yml", "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt/data/raw_airports.csv"}, "error": null, "status": null, "execution_time": 0.044821977615356445, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.609854Z", "completed_at": "2020-05-01T14:39:31.650327Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.652904Z", "completed_at": "2020-05-01T14:39:31.652918Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "postgres", "schema": "analysis_seed_data", "fqn": ["malaysia_airports_analysis", "raw_arrivals"], "unique_id": "seed.malaysia_airports_analysis.raw_arrivals", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "raw_arrivals.csv", "original_file_path": "data/raw_arrivals.csv", "name": "raw_arrivals", "resource_type": "seed", "alias": "raw_arrivals", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "schema": "seed_data", "quote_columns": false}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "The arrivals data scrapped from [FlightStats](https://www.flightstats.com/v2/flight-tracker/search).\n\nIn this table, only Malaysian aiports arrival data is included for the day the pipelines was triggered.\n\nColumn descriptions were partially populated using information in\n[this documentation](https://developer.flightstats.com/api-docs/scheduledFlights/v1/scheduledFlightResponse).", "columns": {"sorttime": {"name": "sorttime", "description": "The timestamp that FlightStats uses to sort flights in their system.", "meta": {}, "data_type": null, "tags": []}, "operatedby": {"name": "operatedby", "description": "A description of the flight operator and on behalf of other airlines, if any.", "meta": {}, "data_type": null, "tags": []}, "url": {"name": "url", "description": "The URL prefix which can be concatenated with `https://www.flightstats.com/v2` that will be directed to the respective flight status page.", "meta": {}, "data_type": null, "tags": []}, "date": {"name": "date", "description": "The arrival date string with the format `%d-%m-%Y`.", "meta": {}, "data_type": null, "tags": []}, "iata": {"name": "iata", "description": "3-letter IATA code for the arrival airport.", "meta": {}, "data_type": null, "tags": []}, "icao": {"name": "icao", "description": "4-letter ICAO code for the arrival airport.", "meta": {}, "data_type": null, "tags": []}, "airport_name": {"name": "airport_name", "description": "The name of the arrival (destination) airport.", "meta": {}, "data_type": null, "tags": []}, "departuretime_timeampm": {"name": "departuretime_timeampm", "description": "The published departure time (local to the airport) for the flight provided by the airline's operating schedule in AM/PM.", "meta": {}, "data_type": null, "tags": []}, "departuretime_time24": {"name": "departuretime_time24", "description": "The published departure time (local to the airport) for the flight provided by the airline's operating schedule in 24-hour military time.", "meta": {}, "data_type": null, "tags": []}, "arrivaltime_timeampm": {"name": "arrivaltime_timeampm", "description": "The published arrival time (local to the airport) for the flight provided by the airline's operating schedule in AM/PM.", "meta": {}, "data_type": null, "tags": []}, "arrivaltime_time24": {"name": "arrivaltime_time24", "description": "The published arrival time (local to the airport) for the flight provided by the airline's operating schedule in 24-hour military time.", "meta": {}, "data_type": null, "tags": []}, "carrier_fs": {"name": "carrier_fs", "description": "The Cirium code for the carrier, globally unique across time.", "meta": {}, "data_type": null, "tags": []}, "carrier_name": {"name": "carrier_name", "description": "The name of the carrier.", "meta": {}, "data_type": null, "tags": []}, "carrier_flightnumber": {"name": "carrier_flightnumber", "description": "The flight identification number and any additional characters.", "meta": {}, "data_type": null, "tags": []}, "airport_fs": {"name": "airport_fs", "description": "The Cirium code for the departure airport, globally unique across time.", "meta": {}, "data_type": null, "tags": []}, "airport_city": {"name": "airport_city", "description": "The city with which the departure airport is associated.", "meta": {}, "data_type": null, "tags": []}, "iscodeshare": {"name": "iscodeshare", "description": "Boolean value indicating if the marketed flight is a [codeshare](http://en.wikipedia.org/wiki/Codeshare_agreement)", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/seeds/seeds.yml", "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt/data/raw_arrivals.csv"}, "error": null, "status": null, "execution_time": 0.04463315010070801, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.609951Z", "completed_at": "2020-05-01T14:39:31.652633Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.653230Z", "completed_at": "2020-05-01T14:39:31.653236Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config({\n        \"materialized\" : \"table\",\n        \"post-hook\": [\n            \"{{ index(this, 'airport_id') }}\",\n            \"{{ index(this, 'country') }}\",\n            \"{{ index(this, 'city') }}\",\n            \"{{ index(this, 'type') }}\",\n        ],\n        \"tags\": [\n            \"cleaned\",\n        ],\n    })\n}}\n\nwith raw_airports as (\n\n    select * from {{ ref('raw_airports') }}\n\n),\n\ncleaned as (\n\n    select\n        airport_id,\n        {{ rm_quotes('name')}},\n        {{ rm_quotes('city')}},\n        {{ rm_quotes('country')}},\n        {{ rm_quotes('iata')}},\n        {{ rm_quotes('icao')}},\n        latitude,\n        longitude,\n        altitude,\n        {{ rm_quotes('timezone')}},\n        {{ rm_quotes('dst')}},\n        {{ rm_quotes('database_time_zone')}},\n        {{ rm_quotes('type')}},\n        {{ rm_quotes('source')}}\n\n    from\n        raw_airports\n\n)\n\nselect * from cleaned", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "base", "base_airports"], "unique_id": "model.malaysia_airports_analysis.base_airports", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "base/base_airports.sql", "original_file_path": "models/base/base_airports.sql", "name": "base_airports", "resource_type": "model", "alias": "base_airports", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [{"sql": "{{ index(this, 'airport_id') }}", "transaction": true, "index": null}, {"sql": "{{ index(this, 'country') }}", "transaction": true, "index": null}, {"sql": "{{ index(this, 'city') }}", "transaction": true, "index": null}, {"sql": "{{ index(this, 'type') }}", "transaction": true, "index": null}], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["cleaned"]}, "tags": ["cleaned"], "refs": [["raw_airports"]], "sources": [], "depends_on": {"macros": ["macro.malaysia_airports_analysis.rm_quotes", "macro.malaysia_airports_analysis.index"], "nodes": ["seed.malaysia_airports_analysis.raw_airports"]}, "description": "The cleaned version of `raw_airports`.\n\n_Note: The default materialisation of this table is `ephemeral`,\nbut it is overridden in the SQL to be materialised as a `table` instead.\nThis is so that indexes can be assigned._", "columns": {"airport_id": {"name": "airport_id", "description": "Unique OpenFlights identifier for this airport.", "meta": {}, "data_type": null, "tags": []}, "name": {"name": "name", "description": "Name of airport. May or may not contain the City name.", "meta": {}, "data_type": null, "tags": []}, "city": {"name": "city", "description": "Main city served by airport. May be spelled differently from Name.", "meta": {}, "data_type": null, "tags": []}, "country": {"name": "country", "description": "Country or territory where airport is located. See [Countries](https://openflights.org/data.html#country) to cross-reference to ISO 3166-1 codes.", "meta": {}, "data_type": null, "tags": []}, "iata": {"name": "iata", "description": "3-letter IATA code. `Null` if not assigned/unknown.", "meta": {}, "data_type": null, "tags": []}, "icao": {"name": "icao", "description": "4-letter ICAO code. `Null` if not assigned.", "meta": {}, "data_type": null, "tags": []}, "latitude": {"name": "latitude", "description": "Decimal degrees, usually to six significant digits. Negative is South, positive is North.", "meta": {}, "data_type": null, "tags": []}, "longitude": {"name": "longitude", "description": "Decimal degrees, usually to six significant digits. Negative is West, positive is East.", "meta": {}, "data_type": null, "tags": []}, "altitude": {"name": "altitude", "description": "In feet.", "meta": {}, "data_type": null, "tags": []}, "timezone": {"name": "timezone", "description": "Hours offset from UTC.\n\nFractional hours are expressed as decimals, eg. India is 5.5.", "meta": {}, "data_type": null, "tags": []}, "dst": {"name": "dst", "description": "Daylight savings time.\n\nOne of E (Europe), A (US/Canada), S (South America),\nO (Australia), Z (New Zealand), N (None) or U (Unknown).\n\nSee also: [Help: Time](https://openflights.org/help/time.html)", "meta": {}, "data_type": null, "tags": []}, "database_time_zone": {"name": "database_time_zone", "description": "Timezone in [\"tz\" (Olson) format](http://en.wikipedia.org/wiki/Tz_database), eg. \"America/Los_Angeles\".", "meta": {}, "data_type": null, "tags": []}, "type": {"name": "type", "description": "Type of the airport.\n\nValue \"airport\" for air terminals, \"station\" for train stations,\n\"port\" for ferry terminals and \"unknown\" if not known.\n\nIn this table, only type=airport is included.", "meta": {}, "data_type": null, "tags": []}, "source": {"name": "source", "description": "Source of this data.\n\n\"OurAirports\" for data sourced from [OurAirports](http://ourairports.com/data/),\n\"Legacy\" for old data not matched to OurAirports (mostly DAFIF),\n\"User\" for unverified user contributions.\n\nIn this table, only source=OurAirports is included.", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/base/base.yml", "build_path": "target/compiled/malaysia_airports_analysis/base/base_airports.sql", "compiled": true, "compiled_sql": "\n\nwith raw_airports as (\n\n    select * from \"postgres\".\"analysis_seed_data\".\"raw_airports\"\n\n),\n\ncleaned as (\n\n    select\n        airport_id,\n        trim(both '\"' from name) as \"name\",\n        trim(both '\"' from city) as \"city\",\n        trim(both '\"' from country) as \"country\",\n        trim(both '\"' from iata) as \"iata\",\n        trim(both '\"' from icao) as \"icao\",\n        latitude,\n        longitude,\n        altitude,\n        trim(both '\"' from timezone) as \"timezone\",\n        trim(both '\"' from dst) as \"dst\",\n        trim(both '\"' from database_time_zone) as \"database_time_zone\",\n        trim(both '\"' from type) as \"type\",\n        trim(both '\"' from source) as \"source\"\n\n    from\n        raw_airports\n\n)\n\nselect * from cleaned", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith raw_airports as (\n\n    select * from \"postgres\".\"analysis_seed_data\".\"raw_airports\"\n\n),\n\ncleaned as (\n\n    select\n        airport_id,\n        trim(both '\"' from name) as \"name\",\n        trim(both '\"' from city) as \"city\",\n        trim(both '\"' from country) as \"country\",\n        trim(both '\"' from iata) as \"iata\",\n        trim(both '\"' from icao) as \"icao\",\n        latitude,\n        longitude,\n        altitude,\n        trim(both '\"' from timezone) as \"timezone\",\n        trim(both '\"' from dst) as \"dst\",\n        trim(both '\"' from database_time_zone) as \"database_time_zone\",\n        trim(both '\"' from type) as \"type\",\n        trim(both '\"' from source) as \"source\"\n\n    from\n        raw_airports\n\n)\n\nselect * from cleaned", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.10378503799438477, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.656038Z", "completed_at": "2020-05-01T14:39:31.686168Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.739267Z", "completed_at": "2020-05-01T14:39:31.739276Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config({\n        \"materialized\" : \"table\",\n        \"post-hook\": [\n            \"{{ index(this, 'arrival_iata') }}\",\n            \"{{ index(this, 'arrival_icao') }}\",\n            \"{{ index(this, 'arrival_timestamp') }}\",\n        ],\n        \"tags\": [\n            \"arrivals\",\n        ],\n    })\n}}\n\nwith raw_arrivals as (\n\n    select * from {{ ref('raw_arrivals') }}\n\n),\n\nrenamed_n_cast_n_add_col as (\n\n    select\n        sorttime                                        as sort_time_utc,\n        sorttime + interval '8 hour'                    as arrival_timestamp,\n        operatedby                                      as operated_by,\n        concat('https://www.flightstats.com/v2', url)   as full_url,\n        to_date(\"date\", 'DD-Mon-YYYY')                  as arrival_date,\n        iata                                            as arrival_iata,\n        icao                                            as arrival_icao,\n        airport_name                                    as arrival_airport_name,\n        departuretime_timeampm                          as departure_time_time_am_pm,\n        departuretime_time24                            as departure_time_time_24,\n        arrivaltime_timeampm                            as arrival_time_time_am_pm,\n        arrivaltime_time24                              as arrival_time_time_24,\n        carrier_fs                                      as carrier_fs,\n        carrier_name                                    as carrier_name,\n        carrier_flightnumber                            as carrier_flight_number,\n        airport_fs                                      as departure_airport_fs,\n        airport_city                                    as departure_airport_city,\n        iscodeshare                                     as is_code_share\n\n    from\n        raw_arrivals\n\n)\n\nselect * from renamed_n_cast_n_add_col", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "base", "base_arrivals__malaysia"], "unique_id": "model.malaysia_airports_analysis.base_arrivals__malaysia", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "base/base_arrivals__malaysia.sql", "original_file_path": "models/base/base_arrivals__malaysia.sql", "name": "base_arrivals__malaysia", "resource_type": "model", "alias": "base_arrivals__malaysia", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [{"sql": "{{ index(this, 'arrival_iata') }}", "transaction": true, "index": null}, {"sql": "{{ index(this, 'arrival_icao') }}", "transaction": true, "index": null}, {"sql": "{{ index(this, 'arrival_timestamp') }}", "transaction": true, "index": null}], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["arrivals"]}, "tags": ["arrivals"], "refs": [["raw_arrivals"]], "sources": [], "depends_on": {"macros": ["macro.malaysia_airports_analysis.index"], "nodes": ["seed.malaysia_airports_analysis.raw_arrivals"]}, "description": "The cleaned version of `raw_arrivals`.\n\nTransformation made were:\n- Named table to reflect that data only has Malaysian airports.\n- Renaming of columns to be more descriptive.\n- Casting strings columns to proper Postgres type.\n- Add additional column(s) for more context.\n\n_Note: The default materialisation of this table is `ephemeral`,\nbut it is overridden in the SQL to be materialised as a `table` instead.\nThis is so that indexes can be assigned._", "columns": {"sort_time_utc": {"name": "sort_time_utc", "description": "The timestamp (UTC) that FlightStats uses to sort flights in their system.", "meta": {}, "data_type": null, "tags": []}, "arrival_timestamp": {"name": "arrival_timestamp", "description": "The timestamp (MYT) of the expected flight arrival _(i.e. `sort_time_utc + 8 hours` )_.", "meta": {}, "data_type": null, "tags": []}, "operated_by": {"name": "operated_by", "description": "A description of the flight operator and on behalf of other airlines, if any.", "meta": {}, "data_type": null, "tags": []}, "full_url": {"name": "full_url", "description": "The full URL users can open and be directed to the respective flight status page.", "meta": {}, "data_type": null, "tags": []}, "arrival_date": {"name": "arrival_date", "description": "The arrival date.", "meta": {}, "data_type": null, "tags": []}, "arrival_iata": {"name": "arrival_iata", "description": "3-letter IATA code for the arrival airport.", "meta": {}, "data_type": null, "tags": []}, "arrival_icao": {"name": "arrival_icao", "description": "4-letter ICAO code for the arrival airport.", "meta": {}, "data_type": null, "tags": []}, "arrival_airport_name": {"name": "arrival_airport_name", "description": "The name of the arrival (destination) airport.", "meta": {}, "data_type": null, "tags": []}, "departure_time_time_am_pm": {"name": "departure_time_time_am_pm", "description": "The published departure time (local to the airport) for the flight provided by the airline's operating schedule in AM/PM.", "meta": {}, "data_type": null, "tags": []}, "departure_time_time_24": {"name": "departure_time_time_24", "description": "The published departure time (local to the airport) for the flight provided by the airline's operating schedule in 24-hour military time.", "meta": {}, "data_type": null, "tags": []}, "arrival_time_time_am_pm": {"name": "arrival_time_time_am_pm", "description": "The published arrival time (local to the airport) for the flight provided by the airline's operating schedule in AM/PM.", "meta": {}, "data_type": null, "tags": []}, "arrival_time_time_24": {"name": "arrival_time_time_24", "description": "The published arrival time (local to the airport) for the flight provided by the airline's operating schedule in 24-hour military time.", "meta": {}, "data_type": null, "tags": []}, "carrier_fs": {"name": "carrier_fs", "description": "The Cirium code for the carrier, globally unique across time.", "meta": {}, "data_type": null, "tags": []}, "carrier_name": {"name": "carrier_name", "description": "The name of the carrier.", "meta": {}, "data_type": null, "tags": []}, "carrier_flight_number": {"name": "carrier_flight_number", "description": "The flight identification number and any additional characters.", "meta": {}, "data_type": null, "tags": []}, "departure_airport_fs": {"name": "departure_airport_fs", "description": "The Cirium code for the departure airport, globally unique across time.", "meta": {}, "data_type": null, "tags": []}, "departure_airport_city": {"name": "departure_airport_city", "description": "The city with which the departure airport is associated.", "meta": {}, "data_type": null, "tags": []}, "is_code_share": {"name": "is_code_share", "description": "Boolean value indicating if the marketed flight is a [codeshare](http://en.wikipedia.org/wiki/Codeshare_agreement)", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/base/base.yml", "build_path": "target/compiled/malaysia_airports_analysis/base/base_arrivals__malaysia.sql", "compiled": true, "compiled_sql": "\n\nwith raw_arrivals as (\n\n    select * from \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\n\n),\n\nrenamed_n_cast_n_add_col as (\n\n    select\n        sorttime                                        as sort_time_utc,\n        sorttime + interval '8 hour'                    as arrival_timestamp,\n        operatedby                                      as operated_by,\n        concat('https://www.flightstats.com/v2', url)   as full_url,\n        to_date(\"date\", 'DD-Mon-YYYY')                  as arrival_date,\n        iata                                            as arrival_iata,\n        icao                                            as arrival_icao,\n        airport_name                                    as arrival_airport_name,\n        departuretime_timeampm                          as departure_time_time_am_pm,\n        departuretime_time24                            as departure_time_time_24,\n        arrivaltime_timeampm                            as arrival_time_time_am_pm,\n        arrivaltime_time24                              as arrival_time_time_24,\n        carrier_fs                                      as carrier_fs,\n        carrier_name                                    as carrier_name,\n        carrier_flightnumber                            as carrier_flight_number,\n        airport_fs                                      as departure_airport_fs,\n        airport_city                                    as departure_airport_city,\n        iscodeshare                                     as is_code_share\n\n    from\n        raw_arrivals\n\n)\n\nselect * from renamed_n_cast_n_add_col", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith raw_arrivals as (\n\n    select * from \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\n\n),\n\nrenamed_n_cast_n_add_col as (\n\n    select\n        sorttime                                        as sort_time_utc,\n        sorttime + interval '8 hour'                    as arrival_timestamp,\n        operatedby                                      as operated_by,\n        concat('https://www.flightstats.com/v2', url)   as full_url,\n        to_date(\"date\", 'DD-Mon-YYYY')                  as arrival_date,\n        iata                                            as arrival_iata,\n        icao                                            as arrival_icao,\n        airport_name                                    as arrival_airport_name,\n        departuretime_timeampm                          as departure_time_time_am_pm,\n        departuretime_time24                            as departure_time_time_24,\n        arrivaltime_timeampm                            as arrival_time_time_am_pm,\n        arrivaltime_time24                              as arrival_time_time_24,\n        carrier_fs                                      as carrier_fs,\n        carrier_name                                    as carrier_name,\n        carrier_flightnumber                            as carrier_flight_number,\n        airport_fs                                      as departure_airport_fs,\n        airport_city                                    as departure_airport_city,\n        iscodeshare                                     as is_code_share\n\n    from\n        raw_arrivals\n\n)\n\nselect * from renamed_n_cast_n_add_col", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.1063992977142334, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.685633Z", "completed_at": "2020-05-01T14:39:31.758740Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.760663Z", "completed_at": "2020-05-01T14:39:31.760671Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('raw_arrivals'), column_name='airport_name') }}", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "schema_test", "not_null_raw_arrivals_airport_name"], "unique_id": "test.malaysia_airports_analysis.not_null_raw_arrivals_airport_name", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "schema_test/not_null_raw_arrivals_airport_name.sql", "original_file_path": "models/seeds/seeds.yml", "name": "not_null_raw_arrivals_airport_name", "resource_type": "test", "alias": "not_null_raw_arrivals_airport_name", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["raw_arrivals"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["seed.malaysia_airports_analysis.raw_arrivals"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/schema_test/not_null_raw_arrivals_airport_name.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\nwhere airport_name is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\nwhere airport_name is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\nwhere airport_name is null\n\n", "column_name": "airport_name", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "airport_name"}}}, "error": null, "status": null, "execution_time": 0.10666489601135254, "thread_id": "Thread-6", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.686058Z", "completed_at": "2020-05-01T14:39:31.759238Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.761294Z", "completed_at": "2020-05-01T14:39:31.761302Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('raw_airports'), column_name='airport_id') }}", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "schema_test", "not_null_raw_airports_airport_id"], "unique_id": "test.malaysia_airports_analysis.not_null_raw_airports_airport_id", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "schema_test/not_null_raw_airports_airport_id.sql", "original_file_path": "models/seeds/seeds.yml", "name": "not_null_raw_airports_airport_id", "resource_type": "test", "alias": "not_null_raw_airports_airport_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["raw_airports"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["seed.malaysia_airports_analysis.raw_airports"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/schema_test/not_null_raw_airports_airport_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis_seed_data\".\"raw_airports\"\nwhere airport_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis_seed_data\".\"raw_airports\"\nwhere airport_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis_seed_data\".\"raw_airports\"\nwhere airport_id is null\n\n", "column_name": "airport_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "airport_id"}}}, "error": null, "status": null, "execution_time": 0.10808706283569336, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.685439Z", "completed_at": "2020-05-01T14:39:31.759601Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.761940Z", "completed_at": "2020-05-01T14:39:31.761946Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('raw_arrivals'), column_name='iscodeshare', values=['true', 'false']) }}", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "schema_test", "accepted_values_raw_arrivals_iscodeshare__true__false"], "unique_id": "test.malaysia_airports_analysis.accepted_values_raw_arrivals_iscodeshare__true__false", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "schema_test/accepted_values_raw_arrivals_iscodeshare__true__false.sql", "original_file_path": "models/seeds/seeds.yml", "name": "accepted_values_raw_arrivals_iscodeshare__true__false", "resource_type": "test", "alias": "accepted_values_raw_arrivals_iscodeshare__true__false", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["raw_arrivals"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["seed.malaysia_airports_analysis.raw_arrivals"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/schema_test/accepted_values_raw_arrivals_iscodeshare__true__false.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        iscodeshare as value_field\n\n    from \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'true','false'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        iscodeshare as value_field\n\n    from \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'true','false'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        iscodeshare as value_field\n\n    from \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'true','false'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "column_name": "iscodeshare", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["true", "false"], "column_name": "iscodeshare"}}}, "error": null, "status": null, "execution_time": 0.1080482006072998, "thread_id": "Thread-5", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.685850Z", "completed_at": "2020-05-01T14:39:31.760030Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.762494Z", "completed_at": "2020-05-01T14:39:31.762500Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('raw_arrivals'), column_name='url') }}", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "schema_test", "not_null_raw_arrivals_url"], "unique_id": "test.malaysia_airports_analysis.not_null_raw_arrivals_url", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "schema_test/not_null_raw_arrivals_url.sql", "original_file_path": "models/seeds/seeds.yml", "name": "not_null_raw_arrivals_url", "resource_type": "test", "alias": "not_null_raw_arrivals_url", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["raw_arrivals"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["seed.malaysia_airports_analysis.raw_arrivals"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/schema_test/not_null_raw_arrivals_url.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\nwhere url is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\nwhere url is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\nwhere url is null\n\n", "column_name": "url", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "url"}}}, "error": null, "status": null, "execution_time": 0.10849618911743164, "thread_id": "Thread-8", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.686483Z", "completed_at": "2020-05-01T14:39:31.761635Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.763944Z", "completed_at": "2020-05-01T14:39:31.763948Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('raw_arrivals'), column_name='url') }}", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "schema_test", "unique_raw_arrivals_url"], "unique_id": "test.malaysia_airports_analysis.unique_raw_arrivals_url", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "schema_test/unique_raw_arrivals_url.sql", "original_file_path": "models/seeds/seeds.yml", "name": "unique_raw_arrivals_url", "resource_type": "test", "alias": "unique_raw_arrivals_url", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["raw_arrivals"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["seed.malaysia_airports_analysis.raw_arrivals"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/schema_test/unique_raw_arrivals_url.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        url\n\n    from \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\n    where url is not null\n    group by url\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        url\n\n    from \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\n    where url is not null\n    group by url\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        url\n\n    from \"postgres\".\"analysis_seed_data\".\"raw_arrivals\"\n    where url is not null\n    group by url\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "url", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "url"}}}, "error": null, "status": null, "execution_time": 0.0979011058807373, "thread_id": "Thread-7", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.686591Z", "completed_at": "2020-05-01T14:39:31.762189Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.764505Z", "completed_at": "2020-05-01T14:39:31.764510Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config(\n        tags=[\n            \"distances\",\n        ]\n    )\n}}\n\nwith base_airports as (\n\n    select * from {{ ref('base_airports') }}\n\n),\n\nbase_dist as (\n\n    select\n        a.\"name\"                                    as a_name,\n        b.\"name\"                                    as b_name,\n        a.latitude                                  as a_lat,\n        a.longitude                                 as a_lon,\n        b.latitude                                  as b_lat,\n        b.longitude                                 as b_lon,\n        (b.latitude - a.latitude) * pi() / 180      as lat_dist,\n        (b.longitude - a.longitude) * pi() / 180    as lon_dist\n\n    from\n        base_airports a\n\n        cross join\n            base_airports b\n\n    where\n        a.country = 'Malaysia'\n    and\n        b.country = 'Malaysia'\n\n    order by\n        1,\n        2\n\n),\n\nbase_area as (\n\n    select\n        *,\n        sin(lat_dist / 2) * sin(lat_dist / 2)\n            + ((a_lat) * pi() / 180)\n                * ((b_lat) * pi() / 180)\n                    * sin(lon_dist / 2)\n                        * sin(lon_dist / 2)     as area\n\n    from\n        base_dist\n\n),\n\ndistance as (\n\n    select\n        a_name,\n        replace(b_name, ' ', '_') as b_name,\n        6371 * 2 * atan2(sqrt(area), sqrt(1-area) ) as distance_km\n\n    from\n        base_area\n\n    order by\n        1,\n        2\n\n)\n\nselect * from distance", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "staging", "stg_airports__malaysia_distances"], "unique_id": "model.malaysia_airports_analysis.stg_airports__malaysia_distances", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "staging/stg_airports__malaysia_distances.sql", "original_file_path": "models/staging/stg_airports__malaysia_distances.sql", "name": "stg_airports__malaysia_distances", "resource_type": "model", "alias": "stg_airports__malaysia_distances", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["distances"]}, "tags": ["distances"], "refs": [["base_airports"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.malaysia_airports_analysis.base_airports"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/staging/stg_airports__malaysia_distances.sql", "compiled": true, "compiled_sql": "\n\nwith base_airports as (\n\n    select * from \"postgres\".\"analysis\".\"base_airports\"\n\n),\n\nbase_dist as (\n\n    select\n        a.\"name\"                                    as a_name,\n        b.\"name\"                                    as b_name,\n        a.latitude                                  as a_lat,\n        a.longitude                                 as a_lon,\n        b.latitude                                  as b_lat,\n        b.longitude                                 as b_lon,\n        (b.latitude - a.latitude) * pi() / 180      as lat_dist,\n        (b.longitude - a.longitude) * pi() / 180    as lon_dist\n\n    from\n        base_airports a\n\n        cross join\n            base_airports b\n\n    where\n        a.country = 'Malaysia'\n    and\n        b.country = 'Malaysia'\n\n    order by\n        1,\n        2\n\n),\n\nbase_area as (\n\n    select\n        *,\n        sin(lat_dist / 2) * sin(lat_dist / 2)\n            + ((a_lat) * pi() / 180)\n                * ((b_lat) * pi() / 180)\n                    * sin(lon_dist / 2)\n                        * sin(lon_dist / 2)     as area\n\n    from\n        base_dist\n\n),\n\ndistance as (\n\n    select\n        a_name,\n        replace(b_name, ' ', '_') as b_name,\n        6371 * 2 * atan2(sqrt(area), sqrt(1-area) ) as distance_km\n\n    from\n        base_area\n\n    order by\n        1,\n        2\n\n)\n\nselect * from distance", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith base_airports as (\n\n    select * from \"postgres\".\"analysis\".\"base_airports\"\n\n),\n\nbase_dist as (\n\n    select\n        a.\"name\"                                    as a_name,\n        b.\"name\"                                    as b_name,\n        a.latitude                                  as a_lat,\n        a.longitude                                 as a_lon,\n        b.latitude                                  as b_lat,\n        b.longitude                                 as b_lon,\n        (b.latitude - a.latitude) * pi() / 180      as lat_dist,\n        (b.longitude - a.longitude) * pi() / 180    as lon_dist\n\n    from\n        base_airports a\n\n        cross join\n            base_airports b\n\n    where\n        a.country = 'Malaysia'\n    and\n        b.country = 'Malaysia'\n\n    order by\n        1,\n        2\n\n),\n\nbase_area as (\n\n    select\n        *,\n        sin(lat_dist / 2) * sin(lat_dist / 2)\n            + ((a_lat) * pi() / 180)\n                * ((b_lat) * pi() / 180)\n                    * sin(lon_dist / 2)\n                        * sin(lon_dist / 2)     as area\n\n    from\n        base_dist\n\n),\n\ndistance as (\n\n    select\n        a_name,\n        replace(b_name, ' ', '_') as b_name,\n        6371 * 2 * atan2(sqrt(area), sqrt(1-area) ) as distance_km\n\n    from\n        base_area\n\n    order by\n        1,\n        2\n\n)\n\nselect * from distance", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.08441495895385742, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.766968Z", "completed_at": "2020-05-01T14:39:31.788478Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.813973Z", "completed_at": "2020-05-01T14:39:31.813982Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('base_airports'), column_name='airport_id') }}", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "schema_test", "not_null_base_airports_airport_id"], "unique_id": "test.malaysia_airports_analysis.not_null_base_airports_airport_id", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "schema_test/not_null_base_airports_airport_id.sql", "original_file_path": "models/base/base.yml", "name": "not_null_base_airports_airport_id", "resource_type": "test", "alias": "not_null_base_airports_airport_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["base_airports"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.malaysia_airports_analysis.base_airports"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/schema_test/not_null_base_airports_airport_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis\".\"base_airports\"\nwhere airport_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis\".\"base_airports\"\nwhere airport_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis\".\"base_airports\"\nwhere airport_id is null\n\n", "column_name": "airport_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "airport_id"}}}, "error": null, "status": null, "execution_time": 0.08533096313476562, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.767082Z", "completed_at": "2020-05-01T14:39:31.788843Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.824930Z", "completed_at": "2020-05-01T14:39:31.824941Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('base_arrivals__malaysia'), column_name='is_code_share', values=['true', 'false']) }}", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "schema_test", "accepted_values_base_arrivals__malaysia_is_code_share__true__false"], "unique_id": "test.malaysia_airports_analysis.accepted_values_base_arrivals__malaysia_is_code_share__true__false", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "schema_test/accepted_values_base_arrivals__malaysia_is_code_share__true__false.sql", "original_file_path": "models/base/base.yml", "name": "accepted_values_base_arrivals__malaysia_is_code_share__true__false", "resource_type": "test", "alias": "accepted_values_base_arrivals__malaysia_is_code_share__true__false", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["base_arrivals__malaysia"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.malaysia_airports_analysis.base_arrivals__malaysia"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/schema_test/accepted_values_base_arrivals__malaysia_is_code_share__true__false.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        is_code_share as value_field\n\n    from \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'true','false'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        is_code_share as value_field\n\n    from \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'true','false'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        is_code_share as value_field\n\n    from \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'true','false'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "column_name": "is_code_share", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["true", "false"], "column_name": "is_code_share"}}}, "error": null, "status": null, "execution_time": 0.08471393585205078, "thread_id": "Thread-6", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.788160Z", "completed_at": "2020-05-01T14:39:31.847754Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.849698Z", "completed_at": "2020-05-01T14:39:31.849706Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config(\n        materialized=\"table\",\n        tags=[\n            \"arrivals\",\n        ]\n    )\n}}\n\nwith base_airports as (\n\n    select * from {{ ref('base_airports') }}\n\n),\n\nbase_arrivals__malaysia as (\n\n    select * from {{ ref('base_arrivals__malaysia') }}\n\n),\n\nlatest_arrival_date as (\n\n    select max(arrival_date) as arrival_date from base_arrivals__malaysia\n\n),\n\naggregate as (\n\n    select\n        arrival_date,\n        arrival_iata,\n        arrival_icao,\n        arrival_airport_name,\n        count(*) as flight_count\n\n    from\n        base_arrivals__malaysia\n\n    where\n        is_code_share is null\n\n    {{ group_by(4) }}\n\n    order by 5 desc\n\n),\n\nfinal as (\n\n    select\n        a.airport_id                as airport_id,\n        a.\"name\"                    as \"name\",\n        a.latitude                  as latitude,\n        a.longitude                 as longitude,\n        coalesce(b.flight_count, 0) as \"flight_count\"\n\n    from\n        base_airports a\n\n        left join\n            aggregate b\n        on\n           a.iata = b.arrival_iata\n\n    where\n        a.country = 'Malaysia'\n    and\n        b.arrival_date in (\n            select arrival_date from latest_arrival_date\n        )\n\n)\n\nselect * from final", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "core", "fct_arrivals__malaysia_summary"], "unique_id": "model.malaysia_airports_analysis.fct_arrivals__malaysia_summary", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "core/fct_arrivals__malaysia_summary.sql", "original_file_path": "models/core/fct_arrivals__malaysia_summary.sql", "name": "fct_arrivals__malaysia_summary", "resource_type": "model", "alias": "fct_arrivals__malaysia_summary", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["arrivals"]}, "tags": ["arrivals"], "refs": [["base_airports"], ["base_arrivals__malaysia"]], "sources": [], "depends_on": {"macros": ["macro.malaysia_airports_analysis.group_by"], "nodes": ["model.malaysia_airports_analysis.base_airports", "model.malaysia_airports_analysis.base_arrivals__malaysia"]}, "description": "A simple aggregated table of Malaysian airports and its corresponding flight counts.", "columns": {"airport_id": {"name": "airport_id", "description": "Unique OpenFlights identifier for this airport.", "meta": {}, "data_type": null, "tags": []}, "name": {"name": "name", "description": "Name of airport. May or may not contain the City name.", "meta": {}, "data_type": null, "tags": []}, "latitude": {"name": "latitude", "description": "Decimal degrees, usually to six significant digits. Negative is South, positive is North.", "meta": {}, "data_type": null, "tags": []}, "longitude": {"name": "longitude", "description": "Decimal degrees, usually to six significant digits. Negative is West, positive is East.", "meta": {}, "data_type": null, "tags": []}, "flight_count": {"name": "flight_count", "description": "The number of flight arrivals to the respective airports for the following day from the day the pipeline was executed.", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/core/core.yml", "build_path": "target/compiled/malaysia_airports_analysis/core/fct_arrivals__malaysia_summary.sql", "compiled": true, "compiled_sql": "\n\nwith base_airports as (\n\n    select * from \"postgres\".\"analysis\".\"base_airports\"\n\n),\n\nbase_arrivals__malaysia as (\n\n    select * from \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\n\n),\n\nlatest_arrival_date as (\n\n    select max(arrival_date) as arrival_date from base_arrivals__malaysia\n\n),\n\naggregate as (\n\n    select\n        arrival_date,\n        arrival_iata,\n        arrival_icao,\n        arrival_airport_name,\n        count(*) as flight_count\n\n    from\n        base_arrivals__malaysia\n\n    where\n        is_code_share is null\n\n    \n\n  GROUP BY\n   \n     1\n      , \n   \n     2\n      , \n   \n     3\n      , \n   \n     4\n     \n   \n\n\n\n    order by 5 desc\n\n),\n\nfinal as (\n\n    select\n        a.airport_id                as airport_id,\n        a.\"name\"                    as \"name\",\n        a.latitude                  as latitude,\n        a.longitude                 as longitude,\n        coalesce(b.flight_count, 0) as \"flight_count\"\n\n    from\n        base_airports a\n\n        left join\n            aggregate b\n        on\n           a.iata = b.arrival_iata\n\n    where\n        a.country = 'Malaysia'\n    and\n        b.arrival_date in (\n            select arrival_date from latest_arrival_date\n        )\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith base_airports as (\n\n    select * from \"postgres\".\"analysis\".\"base_airports\"\n\n),\n\nbase_arrivals__malaysia as (\n\n    select * from \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\n\n),\n\nlatest_arrival_date as (\n\n    select max(arrival_date) as arrival_date from base_arrivals__malaysia\n\n),\n\naggregate as (\n\n    select\n        arrival_date,\n        arrival_iata,\n        arrival_icao,\n        arrival_airport_name,\n        count(*) as flight_count\n\n    from\n        base_arrivals__malaysia\n\n    where\n        is_code_share is null\n\n    \n\n  GROUP BY\n   \n     1\n      , \n   \n     2\n      , \n   \n     3\n      , \n   \n     4\n     \n   \n\n\n\n    order by 5 desc\n\n),\n\nfinal as (\n\n    select\n        a.airport_id                as airport_id,\n        a.\"name\"                    as \"name\",\n        a.latitude                  as latitude,\n        a.longitude                 as longitude,\n        coalesce(b.flight_count, 0) as \"flight_count\"\n\n    from\n        base_airports a\n\n        left join\n            aggregate b\n        on\n           a.iata = b.arrival_iata\n\n    where\n        a.country = 'Malaysia'\n    and\n        b.arrival_date in (\n            select arrival_date from latest_arrival_date\n        )\n\n)\n\nselect * from final", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.08599019050598145, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.788027Z", "completed_at": "2020-05-01T14:39:31.848251Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.850374Z", "completed_at": "2020-05-01T14:39:31.850381Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('base_arrivals__malaysia'), column_name='arrival_airport_name') }}", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "schema_test", "not_null_base_arrivals__malaysia_arrival_airport_name"], "unique_id": "test.malaysia_airports_analysis.not_null_base_arrivals__malaysia_arrival_airport_name", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "schema_test/not_null_base_arrivals__malaysia_arrival_airport_name.sql", "original_file_path": "models/base/base.yml", "name": "not_null_base_arrivals__malaysia_arrival_airport_name", "resource_type": "test", "alias": "not_null_base_arrivals__malaysia_arrival_airport_name", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["base_arrivals__malaysia"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.malaysia_airports_analysis.base_arrivals__malaysia"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/schema_test/not_null_base_arrivals__malaysia_arrival_airport_name.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\nwhere arrival_airport_name is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\nwhere arrival_airport_name is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\nwhere arrival_airport_name is null\n\n", "column_name": "arrival_airport_name", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "arrival_airport_name"}}}, "error": null, "status": null, "execution_time": 0.08616209030151367, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.788774Z", "completed_at": "2020-05-01T14:39:31.849984Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.852337Z", "completed_at": "2020-05-01T14:39:31.852342Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('base_arrivals__malaysia'), column_name='full_url') }}", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "schema_test", "not_null_base_arrivals__malaysia_full_url"], "unique_id": "test.malaysia_airports_analysis.not_null_base_arrivals__malaysia_full_url", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "schema_test/not_null_base_arrivals__malaysia_full_url.sql", "original_file_path": "models/base/base.yml", "name": "not_null_base_arrivals__malaysia_full_url", "resource_type": "test", "alias": "not_null_base_arrivals__malaysia_full_url", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["base_arrivals__malaysia"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.malaysia_airports_analysis.base_arrivals__malaysia"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/schema_test/not_null_base_arrivals__malaysia_full_url.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\nwhere full_url is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\nwhere full_url is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\nwhere full_url is null\n\n", "column_name": "full_url", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "full_url"}}}, "error": null, "status": null, "execution_time": 0.08608698844909668, "thread_id": "Thread-5", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.789137Z", "completed_at": "2020-05-01T14:39:31.850855Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.852751Z", "completed_at": "2020-05-01T14:39:31.852757Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('base_arrivals__malaysia'), column_name='full_url') }}", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "schema_test", "unique_base_arrivals__malaysia_full_url"], "unique_id": "test.malaysia_airports_analysis.unique_base_arrivals__malaysia_full_url", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "schema_test/unique_base_arrivals__malaysia_full_url.sql", "original_file_path": "models/base/base.yml", "name": "unique_base_arrivals__malaysia_full_url", "resource_type": "test", "alias": "unique_base_arrivals__malaysia_full_url", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["base_arrivals__malaysia"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.malaysia_airports_analysis.base_arrivals__malaysia"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/schema_test/unique_base_arrivals__malaysia_full_url.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        full_url\n\n    from \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\n    where full_url is not null\n    group by full_url\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        full_url\n\n    from \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\n    where full_url is not null\n    group by full_url\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        full_url\n\n    from \"postgres\".\"analysis\".\"base_arrivals__malaysia\"\n    where full_url is not null\n    group by full_url\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "full_url", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "full_url"}}}, "error": null, "status": null, "execution_time": 0.06755709648132324, "thread_id": "Thread-8", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.813792Z", "completed_at": "2020-05-01T14:39:31.851381Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:31.853343Z", "completed_at": "2020-05-01T14:39:31.853348Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config({\n        \"materialized\" : \"table\",\n        \"pre-hook\": [\n            \"create extension if not exists tablefunc\",\n        ],\n        \"tags\": [\n            \"distances\",\n        ],\n    })\n}}\n\nwith stg_airports__malaysia_distances as (\n\n    select * from {{ ref('stg_airports__malaysia_distances') }}\n\n)\n\nselect\n    a_name,\n    {{ get_b_name_columns() }}\n\nfrom\n    crosstab(\n        'select\n            a_name,\n            b_name,\n            distance_km\n        from stg_airports__malaysia_distances',\n        $$VALUES {{ get_b_name_value() }} $$\n    ) as ct (\n        a_name text, {{ get_b_name_type() }}\n    )\n\norder by 1 asc", "database": "postgres", "schema": "analysis", "fqn": ["malaysia_airports_analysis", "core", "fct_airports__malaysia_distances_km"], "unique_id": "model.malaysia_airports_analysis.fct_airports__malaysia_distances_km", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "core/fct_airports__malaysia_distances_km.sql", "original_file_path": "models/core/fct_airports__malaysia_distances_km.sql", "name": "fct_airports__malaysia_distances_km", "resource_type": "model", "alias": "fct_airports__malaysia_distances_km", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [{"sql": "create extension if not exists tablefunc", "transaction": true, "index": null}], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["distances"]}, "tags": ["distances"], "refs": [["stg_airports__malaysia_distances"], ["stg_airports__malaysia_distances"], ["stg_airports__malaysia_distances"], ["stg_airports__malaysia_distances"]], "sources": [], "depends_on": {"macros": ["macro.malaysia_airports_analysis.get_b_name_columns", "macro.malaysia_airports_analysis.get_b_name_value", "macro.malaysia_airports_analysis.get_b_name_type"], "nodes": ["model.malaysia_airports_analysis.stg_airports__malaysia_distances", "model.malaysia_airports_analysis.stg_airports__malaysia_distances", "model.malaysia_airports_analysis.stg_airports__malaysia_distances", "model.malaysia_airports_analysis.stg_airports__malaysia_distances"]}, "description": "The cross tabulation (matrix) of the relative distances (km) between Malaysian airports.\n\n_Note the use of `crosstab` function in the SQL query._", "columns": {"a_name": {"name": "a_name", "description": "The list of Malaysian airport names.", "meta": {}, "data_type": null, "tags": []}, "Bakalalan_Airport": {"name": "Bakalalan_Airport", "description": "The relative distance (km) between Bakalalan_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Bario_Airport": {"name": "Bario_Airport", "description": "The relative distance (km) between Bario_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Belaga_Airport": {"name": "Belaga_Airport", "description": "The relative distance (km) between Belaga_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Bintulu_Airport": {"name": "Bintulu_Airport", "description": "The relative distance (km) between Bintulu_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Butterworth_Airport": {"name": "Butterworth_Airport", "description": "The relative distance (km) between Butterworth_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Kerteh_Airport": {"name": "Kerteh_Airport", "description": "The relative distance (km) between Kerteh_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Kluang_Airport": {"name": "Kluang_Airport", "description": "The relative distance (km) between Kluang_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Kota_Kinabalu_International_Airport": {"name": "Kota_Kinabalu_International_Airport", "description": "The relative distance (km) between Kota_Kinabalu_International_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Kuala_Lumpur_International_Airport": {"name": "Kuala_Lumpur_International_Airport", "description": "The relative distance (km) between Kuala_Lumpur_International_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Kuantan_Airport": {"name": "Kuantan_Airport", "description": "The relative distance (km) between Kuantan_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Kuching_International_Airport": {"name": "Kuching_International_Airport", "description": "The relative distance (km) between Kuching_International_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Kudat_Airport": {"name": "Kudat_Airport", "description": "The relative distance (km) between Kudat_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Labuan_Airport": {"name": "Labuan_Airport", "description": "The relative distance (km) between Labuan_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Lahad_Datu_Airport": {"name": "Lahad_Datu_Airport", "description": "The relative distance (km) between Lahad_Datu_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Langkawi_International_Airport": {"name": "Langkawi_International_Airport", "description": "The relative distance (km) between Langkawi_International_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Lawas_Airport": {"name": "Lawas_Airport", "description": "The relative distance (km) between Lawas_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Limbang_Airport": {"name": "Limbang_Airport", "description": "The relative distance (km) between Limbang_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Long_Akah_Airport": {"name": "Long_Akah_Airport", "description": "The relative distance (km) between Long_Akah_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Long_Lellang_Airport": {"name": "Long_Lellang_Airport", "description": "The relative distance (km) between Long_Lellang_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Long_Seridan_Airport": {"name": "Long_Seridan_Airport", "description": "The relative distance (km) between Long_Seridan_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "LTS_Pulau_Redang_Airport": {"name": "LTS_Pulau_Redang_Airport", "description": "The relative distance (km) between LTS_Pulau_Redang_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Malacca_Airport": {"name": "Malacca_Airport", "description": "The relative distance (km) between Malacca_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Marudi_Airport": {"name": "Marudi_Airport", "description": "The relative distance (km) between Marudi_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Miri_Airport": {"name": "Miri_Airport", "description": "The relative distance (km) between Miri_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Mukah_Airport": {"name": "Mukah_Airport", "description": "The relative distance (km) between Mukah_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Mulu_Airport": {"name": "Mulu_Airport", "description": "The relative distance (km) between Mulu_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Penang_International_Airport": {"name": "Penang_International_Airport", "description": "The relative distance (km) between Penang_International_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Pulau_Pangkor_Airport": {"name": "Pulau_Pangkor_Airport", "description": "The relative distance (km) between Pulau_Pangkor_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Pulau_Tioman_Airport": {"name": "Pulau_Tioman_Airport", "description": "The relative distance (km) between Pulau_Tioman_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Sandakan_Airport": {"name": "Sandakan_Airport", "description": "The relative distance (km) between Sandakan_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Senai_International_Airport": {"name": "Senai_International_Airport", "description": "The relative distance (km) between Senai_International_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Sibu_Airport": {"name": "Sibu_Airport", "description": "The relative distance (km) between Sibu_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Simpang_Airport": {"name": "Simpang_Airport", "description": "The relative distance (km) between Simpang_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Sultan_Abdul_Aziz_Shah_International_Airport": {"name": "Sultan_Abdul_Aziz_Shah_International_Airport", "description": "The relative distance (km) between Sultan_Abdul_Aziz_Shah_International_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Sultan_Abdul_Halim_Airport": {"name": "Sultan_Abdul_Halim_Airport", "description": "The relative distance (km) between Sultan_Abdul_Halim_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Sultan_Azlan_Shah_Airport": {"name": "Sultan_Azlan_Shah_Airport", "description": "The relative distance (km) between Sultan_Azlan_Shah_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Sultan_Ismail_Petra_Airport": {"name": "Sultan_Ismail_Petra_Airport", "description": "The relative distance (km) between Sultan_Ismail_Petra_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Sultan_Mahmud_Airport": {"name": "Sultan_Mahmud_Airport", "description": "The relative distance (km) between Sultan_Mahmud_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Tawau_Airport": {"name": "Tawau_Airport", "description": "The relative distance (km) between Tawau_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}, "Tomanggong_Airport": {"name": "Tomanggong_Airport", "description": "The relative distance (km) between Tomanggong_Airport and the airport name in `a_name` column", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/core/core.yml", "build_path": "target/compiled/malaysia_airports_analysis/core/fct_airports__malaysia_distances_km.sql", "compiled": true, "compiled_sql": "\n\nwith stg_airports__malaysia_distances as (\n\n    select * from \"postgres\".\"analysis\".\"stg_airports__malaysia_distances\"\n\n)\n\nselect\n    a_name,\n    \n        coalesce( Bakalalan_Airport , 0) as \"Bakalalan_Airport\",\n        coalesce( Bario_Airport , 0) as \"Bario_Airport\",\n        coalesce( Belaga_Airport , 0) as \"Belaga_Airport\",\n        coalesce( Bintulu_Airport , 0) as \"Bintulu_Airport\",\n        coalesce( Butterworth_Airport , 0) as \"Butterworth_Airport\",\n        coalesce( Kerteh_Airport , 0) as \"Kerteh_Airport\",\n        coalesce( Kluang_Airport , 0) as \"Kluang_Airport\",\n        coalesce( Kota_Kinabalu_International_Airport , 0) as \"Kota_Kinabalu_International_Airport\",\n        coalesce( Kuala_Lumpur_International_Airport , 0) as \"Kuala_Lumpur_International_Airport\",\n        coalesce( Kuantan_Airport , 0) as \"Kuantan_Airport\",\n        coalesce( Kuching_International_Airport , 0) as \"Kuching_International_Airport\",\n        coalesce( Kudat_Airport , 0) as \"Kudat_Airport\",\n        coalesce( Labuan_Airport , 0) as \"Labuan_Airport\",\n        coalesce( Lahad_Datu_Airport , 0) as \"Lahad_Datu_Airport\",\n        coalesce( Langkawi_International_Airport , 0) as \"Langkawi_International_Airport\",\n        coalesce( Lawas_Airport , 0) as \"Lawas_Airport\",\n        coalesce( Limbang_Airport , 0) as \"Limbang_Airport\",\n        coalesce( Long_Akah_Airport , 0) as \"Long_Akah_Airport\",\n        coalesce( Long_Lellang_Airport , 0) as \"Long_Lellang_Airport\",\n        coalesce( Long_Seridan_Airport , 0) as \"Long_Seridan_Airport\",\n        coalesce( LTS_Pulau_Redang_Airport , 0) as \"LTS_Pulau_Redang_Airport\",\n        coalesce( Malacca_Airport , 0) as \"Malacca_Airport\",\n        coalesce( Marudi_Airport , 0) as \"Marudi_Airport\",\n        coalesce( Miri_Airport , 0) as \"Miri_Airport\",\n        coalesce( Mukah_Airport , 0) as \"Mukah_Airport\",\n        coalesce( Mulu_Airport , 0) as \"Mulu_Airport\",\n        coalesce( Penang_International_Airport , 0) as \"Penang_International_Airport\",\n        coalesce( Pulau_Pangkor_Airport , 0) as \"Pulau_Pangkor_Airport\",\n        coalesce( Pulau_Tioman_Airport , 0) as \"Pulau_Tioman_Airport\",\n        coalesce( Sandakan_Airport , 0) as \"Sandakan_Airport\",\n        coalesce( Senai_International_Airport , 0) as \"Senai_International_Airport\",\n        coalesce( Sibu_Airport , 0) as \"Sibu_Airport\",\n        coalesce( Simpang_Airport , 0) as \"Simpang_Airport\",\n        coalesce( Sultan_Abdul_Aziz_Shah_International_Airport , 0) as \"Sultan_Abdul_Aziz_Shah_International_Airport\",\n        coalesce( Sultan_Abdul_Halim_Airport , 0) as \"Sultan_Abdul_Halim_Airport\",\n        coalesce( Sultan_Azlan_Shah_Airport , 0) as \"Sultan_Azlan_Shah_Airport\",\n        coalesce( Sultan_Ismail_Petra_Airport , 0) as \"Sultan_Ismail_Petra_Airport\",\n        coalesce( Sultan_Mahmud_Airport , 0) as \"Sultan_Mahmud_Airport\",\n        coalesce( Tawau_Airport , 0) as \"Tawau_Airport\",\n        coalesce( Tomanggong_Airport , 0) as \"Tomanggong_Airport\"\n\nfrom\n    crosstab(\n        'select\n            a_name,\n            b_name,\n            distance_km\n        from stg_airports__malaysia_distances',\n        $$VALUES \n        ('Bakalalan_Airport'),\n        ('Bario_Airport'),\n        ('Belaga_Airport'),\n        ('Bintulu_Airport'),\n        ('Butterworth_Airport'),\n        ('Kerteh_Airport'),\n        ('Kluang_Airport'),\n        ('Kota_Kinabalu_International_Airport'),\n        ('Kuala_Lumpur_International_Airport'),\n        ('Kuantan_Airport'),\n        ('Kuching_International_Airport'),\n        ('Kudat_Airport'),\n        ('Labuan_Airport'),\n        ('Lahad_Datu_Airport'),\n        ('Langkawi_International_Airport'),\n        ('Lawas_Airport'),\n        ('Limbang_Airport'),\n        ('Long_Akah_Airport'),\n        ('Long_Lellang_Airport'),\n        ('Long_Seridan_Airport'),\n        ('LTS_Pulau_Redang_Airport'),\n        ('Malacca_Airport'),\n        ('Marudi_Airport'),\n        ('Miri_Airport'),\n        ('Mukah_Airport'),\n        ('Mulu_Airport'),\n        ('Penang_International_Airport'),\n        ('Pulau_Pangkor_Airport'),\n        ('Pulau_Tioman_Airport'),\n        ('Sandakan_Airport'),\n        ('Senai_International_Airport'),\n        ('Sibu_Airport'),\n        ('Simpang_Airport'),\n        ('Sultan_Abdul_Aziz_Shah_International_Airport'),\n        ('Sultan_Abdul_Halim_Airport'),\n        ('Sultan_Azlan_Shah_Airport'),\n        ('Sultan_Ismail_Petra_Airport'),\n        ('Sultan_Mahmud_Airport'),\n        ('Tawau_Airport'),\n        ('Tomanggong_Airport') $$\n    ) as ct (\n        a_name text, \n        Bakalalan_Airport float8,\n        Bario_Airport float8,\n        Belaga_Airport float8,\n        Bintulu_Airport float8,\n        Butterworth_Airport float8,\n        Kerteh_Airport float8,\n        Kluang_Airport float8,\n        Kota_Kinabalu_International_Airport float8,\n        Kuala_Lumpur_International_Airport float8,\n        Kuantan_Airport float8,\n        Kuching_International_Airport float8,\n        Kudat_Airport float8,\n        Labuan_Airport float8,\n        Lahad_Datu_Airport float8,\n        Langkawi_International_Airport float8,\n        Lawas_Airport float8,\n        Limbang_Airport float8,\n        Long_Akah_Airport float8,\n        Long_Lellang_Airport float8,\n        Long_Seridan_Airport float8,\n        LTS_Pulau_Redang_Airport float8,\n        Malacca_Airport float8,\n        Marudi_Airport float8,\n        Miri_Airport float8,\n        Mukah_Airport float8,\n        Mulu_Airport float8,\n        Penang_International_Airport float8,\n        Pulau_Pangkor_Airport float8,\n        Pulau_Tioman_Airport float8,\n        Sandakan_Airport float8,\n        Senai_International_Airport float8,\n        Sibu_Airport float8,\n        Simpang_Airport float8,\n        Sultan_Abdul_Aziz_Shah_International_Airport float8,\n        Sultan_Abdul_Halim_Airport float8,\n        Sultan_Azlan_Shah_Airport float8,\n        Sultan_Ismail_Petra_Airport float8,\n        Sultan_Mahmud_Airport float8,\n        Tawau_Airport float8,\n        Tomanggong_Airport float8\n    )\n\norder by 1 asc", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith stg_airports__malaysia_distances as (\n\n    select * from \"postgres\".\"analysis\".\"stg_airports__malaysia_distances\"\n\n)\n\nselect\n    a_name,\n    \n        coalesce( Bakalalan_Airport , 0) as \"Bakalalan_Airport\",\n        coalesce( Bario_Airport , 0) as \"Bario_Airport\",\n        coalesce( Belaga_Airport , 0) as \"Belaga_Airport\",\n        coalesce( Bintulu_Airport , 0) as \"Bintulu_Airport\",\n        coalesce( Butterworth_Airport , 0) as \"Butterworth_Airport\",\n        coalesce( Kerteh_Airport , 0) as \"Kerteh_Airport\",\n        coalesce( Kluang_Airport , 0) as \"Kluang_Airport\",\n        coalesce( Kota_Kinabalu_International_Airport , 0) as \"Kota_Kinabalu_International_Airport\",\n        coalesce( Kuala_Lumpur_International_Airport , 0) as \"Kuala_Lumpur_International_Airport\",\n        coalesce( Kuantan_Airport , 0) as \"Kuantan_Airport\",\n        coalesce( Kuching_International_Airport , 0) as \"Kuching_International_Airport\",\n        coalesce( Kudat_Airport , 0) as \"Kudat_Airport\",\n        coalesce( Labuan_Airport , 0) as \"Labuan_Airport\",\n        coalesce( Lahad_Datu_Airport , 0) as \"Lahad_Datu_Airport\",\n        coalesce( Langkawi_International_Airport , 0) as \"Langkawi_International_Airport\",\n        coalesce( Lawas_Airport , 0) as \"Lawas_Airport\",\n        coalesce( Limbang_Airport , 0) as \"Limbang_Airport\",\n        coalesce( Long_Akah_Airport , 0) as \"Long_Akah_Airport\",\n        coalesce( Long_Lellang_Airport , 0) as \"Long_Lellang_Airport\",\n        coalesce( Long_Seridan_Airport , 0) as \"Long_Seridan_Airport\",\n        coalesce( LTS_Pulau_Redang_Airport , 0) as \"LTS_Pulau_Redang_Airport\",\n        coalesce( Malacca_Airport , 0) as \"Malacca_Airport\",\n        coalesce( Marudi_Airport , 0) as \"Marudi_Airport\",\n        coalesce( Miri_Airport , 0) as \"Miri_Airport\",\n        coalesce( Mukah_Airport , 0) as \"Mukah_Airport\",\n        coalesce( Mulu_Airport , 0) as \"Mulu_Airport\",\n        coalesce( Penang_International_Airport , 0) as \"Penang_International_Airport\",\n        coalesce( Pulau_Pangkor_Airport , 0) as \"Pulau_Pangkor_Airport\",\n        coalesce( Pulau_Tioman_Airport , 0) as \"Pulau_Tioman_Airport\",\n        coalesce( Sandakan_Airport , 0) as \"Sandakan_Airport\",\n        coalesce( Senai_International_Airport , 0) as \"Senai_International_Airport\",\n        coalesce( Sibu_Airport , 0) as \"Sibu_Airport\",\n        coalesce( Simpang_Airport , 0) as \"Simpang_Airport\",\n        coalesce( Sultan_Abdul_Aziz_Shah_International_Airport , 0) as \"Sultan_Abdul_Aziz_Shah_International_Airport\",\n        coalesce( Sultan_Abdul_Halim_Airport , 0) as \"Sultan_Abdul_Halim_Airport\",\n        coalesce( Sultan_Azlan_Shah_Airport , 0) as \"Sultan_Azlan_Shah_Airport\",\n        coalesce( Sultan_Ismail_Petra_Airport , 0) as \"Sultan_Ismail_Petra_Airport\",\n        coalesce( Sultan_Mahmud_Airport , 0) as \"Sultan_Mahmud_Airport\",\n        coalesce( Tawau_Airport , 0) as \"Tawau_Airport\",\n        coalesce( Tomanggong_Airport , 0) as \"Tomanggong_Airport\"\n\nfrom\n    crosstab(\n        'select\n            a_name,\n            b_name,\n            distance_km\n        from stg_airports__malaysia_distances',\n        $$VALUES \n        ('Bakalalan_Airport'),\n        ('Bario_Airport'),\n        ('Belaga_Airport'),\n        ('Bintulu_Airport'),\n        ('Butterworth_Airport'),\n        ('Kerteh_Airport'),\n        ('Kluang_Airport'),\n        ('Kota_Kinabalu_International_Airport'),\n        ('Kuala_Lumpur_International_Airport'),\n        ('Kuantan_Airport'),\n        ('Kuching_International_Airport'),\n        ('Kudat_Airport'),\n        ('Labuan_Airport'),\n        ('Lahad_Datu_Airport'),\n        ('Langkawi_International_Airport'),\n        ('Lawas_Airport'),\n        ('Limbang_Airport'),\n        ('Long_Akah_Airport'),\n        ('Long_Lellang_Airport'),\n        ('Long_Seridan_Airport'),\n        ('LTS_Pulau_Redang_Airport'),\n        ('Malacca_Airport'),\n        ('Marudi_Airport'),\n        ('Miri_Airport'),\n        ('Mukah_Airport'),\n        ('Mulu_Airport'),\n        ('Penang_International_Airport'),\n        ('Pulau_Pangkor_Airport'),\n        ('Pulau_Tioman_Airport'),\n        ('Sandakan_Airport'),\n        ('Senai_International_Airport'),\n        ('Sibu_Airport'),\n        ('Simpang_Airport'),\n        ('Sultan_Abdul_Aziz_Shah_International_Airport'),\n        ('Sultan_Abdul_Halim_Airport'),\n        ('Sultan_Azlan_Shah_Airport'),\n        ('Sultan_Ismail_Petra_Airport'),\n        ('Sultan_Mahmud_Airport'),\n        ('Tawau_Airport'),\n        ('Tomanggong_Airport') $$\n    ) as ct (\n        a_name text, \n        Bakalalan_Airport float8,\n        Bario_Airport float8,\n        Belaga_Airport float8,\n        Bintulu_Airport float8,\n        Butterworth_Airport float8,\n        Kerteh_Airport float8,\n        Kluang_Airport float8,\n        Kota_Kinabalu_International_Airport float8,\n        Kuala_Lumpur_International_Airport float8,\n        Kuantan_Airport float8,\n        Kuching_International_Airport float8,\n        Kudat_Airport float8,\n        Labuan_Airport float8,\n        Lahad_Datu_Airport float8,\n        Langkawi_International_Airport float8,\n        Lawas_Airport float8,\n        Limbang_Airport float8,\n        Long_Akah_Airport float8,\n        Long_Lellang_Airport float8,\n        Long_Seridan_Airport float8,\n        LTS_Pulau_Redang_Airport float8,\n        Malacca_Airport float8,\n        Marudi_Airport float8,\n        Miri_Airport float8,\n        Mukah_Airport float8,\n        Mulu_Airport float8,\n        Penang_International_Airport float8,\n        Pulau_Pangkor_Airport float8,\n        Pulau_Tioman_Airport float8,\n        Sandakan_Airport float8,\n        Senai_International_Airport float8,\n        Sibu_Airport float8,\n        Simpang_Airport float8,\n        Sultan_Abdul_Aziz_Shah_International_Airport float8,\n        Sultan_Abdul_Halim_Airport float8,\n        Sultan_Azlan_Shah_Airport float8,\n        Sultan_Ismail_Petra_Airport float8,\n        Sultan_Mahmud_Airport float8,\n        Tawau_Airport float8,\n        Tomanggong_Airport float8\n    )\n\norder by 1 asc", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.41656923294067383, "thread_id": "Thread-7", "timing": [{"name": "compile", "started_at": "2020-05-01T14:39:31.855057Z", "completed_at": "2020-05-01T14:39:32.265469Z"}, {"name": "execute", "started_at": "2020-05-01T14:39:32.265849Z", "completed_at": "2020-05-01T14:39:32.265858Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-05-01T14:39:32.344411Z", "elapsed_time": 0.7377452850341797}