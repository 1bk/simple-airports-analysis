{"results": [{"node": {"raw_sql": "", "database": "postgres", "schema": "public", "fqn": ["malaysia_airports_analysis", "raw_airports"], "unique_id": "seed.malaysia_airports_analysis.raw_airports", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "raw_airports.csv", "original_file_path": "data/raw_airports.csv", "name": "raw_airports", "resource_type": "seed", "alias": "raw_airports", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "quote_columns": false}, "tags": [], "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": "None", "seed_file_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt/data/raw_airports.csv"}, "error": null, "status": null, "execution_time": 0.02359771728515625, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-02-17T17:01:03.288353Z", "completed_at": "2020-02-17T17:01:03.307726Z"}, {"name": "execute", "started_at": "2020-02-17T17:01:03.310045Z", "completed_at": "2020-02-17T17:01:03.310081Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "postgres", "schema": "public", "fqn": ["malaysia_airports_analysis", "raw_arrivals"], "unique_id": "seed.malaysia_airports_analysis.raw_arrivals", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "raw_arrivals.csv", "original_file_path": "data/raw_arrivals.csv", "name": "raw_arrivals", "resource_type": "seed", "alias": "raw_arrivals", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "quote_columns": false}, "tags": [], "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": "None", "seed_file_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt/data/raw_arrivals.csv"}, "error": null, "status": null, "execution_time": 0.02359795570373535, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-02-17T17:01:03.288485Z", "completed_at": "2020-02-17T17:01:03.309698Z"}, {"name": "execute", "started_at": "2020-02-17T17:01:03.310362Z", "completed_at": "2020-02-17T17:01:03.310367Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config({\n        \"materialized\" : \"table\",\n        \"post-hook\": [\n            \"{{ index(this, 'airport_id') }}\",\n            \"{{ index(this, 'country') }}\",\n            \"{{ index(this, 'city') }}\",\n            \"{{ index(this, 'type') }}\",\n        ],\n        \"tags\": [\n            \"cleaned_airports\",\n        ],\n    })\n}}\n\nwith raw_airports as (\n\n    select * from {{ ref('raw_airports') }}\n\n),\n\ncleaned as (\n\n    select\n        airport_id,\n        {{ rm_quotes('name')}},\n        {{ rm_quotes('city')}},\n        {{ rm_quotes('country')}},\n        {{ rm_quotes('iata')}},\n        {{ rm_quotes('icao')}},\n        latitude,\n        longitude,\n        altitude,\n        {{ rm_quotes('timezone')}},\n        {{ rm_quotes('dst')}},\n        {{ rm_quotes('database_time_zone')}},\n        {{ rm_quotes('type')}},\n        {{ rm_quotes('source')}}\n    from\n        raw_airports\n)\n\nselect * from cleaned", "database": "postgres", "schema": "public", "fqn": ["malaysia_airports_analysis", "staging", "stg_airports"], "unique_id": "model.malaysia_airports_analysis.stg_airports", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "staging/stg_airports.sql", "original_file_path": "models/staging/stg_airports.sql", "name": "stg_airports", "resource_type": "model", "alias": "stg_airports", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [{"sql": "{{ index(this, 'airport_id') }}", "transaction": true, "index": null}, {"sql": "{{ index(this, 'country') }}", "transaction": true, "index": null}, {"sql": "{{ index(this, 'city') }}", "transaction": true, "index": null}, {"sql": "{{ index(this, 'type') }}", "transaction": true, "index": null}], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["cleaned_airports"]}, "tags": ["cleaned_airports"], "refs": [["raw_airports"]], "sources": [], "depends_on": {"nodes": ["seed.malaysia_airports_analysis.raw_airports"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/staging/stg_airports.sql", "compiled": true, "compiled_sql": "\n\nwith raw_airports as (\n\n    select * from \"postgres\".\"public\".\"raw_airports\"\n\n),\n\ncleaned as (\n\n    select\n        airport_id,\n        trim(both '\"' from name) as \"name\",\n        trim(both '\"' from city) as \"city\",\n        trim(both '\"' from country) as \"country\",\n        trim(both '\"' from iata) as \"iata\",\n        trim(both '\"' from icao) as \"icao\",\n        latitude,\n        longitude,\n        altitude,\n        trim(both '\"' from timezone) as \"timezone\",\n        trim(both '\"' from dst) as \"dst\",\n        trim(both '\"' from database_time_zone) as \"database_time_zone\",\n        trim(both '\"' from type) as \"type\",\n        trim(both '\"' from source) as \"source\"\n    from\n        raw_airports\n)\n\nselect * from cleaned", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith raw_airports as (\n\n    select * from \"postgres\".\"public\".\"raw_airports\"\n\n),\n\ncleaned as (\n\n    select\n        airport_id,\n        trim(both '\"' from name) as \"name\",\n        trim(both '\"' from city) as \"city\",\n        trim(both '\"' from country) as \"country\",\n        trim(both '\"' from iata) as \"iata\",\n        trim(both '\"' from icao) as \"icao\",\n        latitude,\n        longitude,\n        altitude,\n        trim(both '\"' from timezone) as \"timezone\",\n        trim(both '\"' from dst) as \"dst\",\n        trim(both '\"' from database_time_zone) as \"database_time_zone\",\n        trim(both '\"' from type) as \"type\",\n        trim(both '\"' from source) as \"source\"\n    from\n        raw_airports\n)\n\nselect * from cleaned", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.04357004165649414, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-02-17T17:01:03.313100Z", "completed_at": "2020-02-17T17:01:03.353872Z"}, {"name": "execute", "started_at": "2020-02-17T17:01:03.354742Z", "completed_at": "2020-02-17T17:01:03.354753Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config({\n        \"materialized\" : \"table\",\n        \"post-hook\": [\n            \"{{ index(this, 'arrival_iata') }}\",\n            \"{{ index(this, 'arrival_icao') }}\",\n            \"{{ index(this, 'arrival_timestamp') }}\",\n        ],\n        \"tags\": [\n            \"arrivals\",\n        ],\n    })\n}}\n\nwith raw_arrivals as (\n\n    select * from {{ ref('raw_arrivals') }}\n\n),\n\nrenamed_n_add_col as (\n\n    select\n        sorttime as sort_time_utc,\n        sorttime + interval '8 hour' as arrival_timestamp,\n        operatedby as operated_by,\n        concat('https://www.flightstats.com/v2', url) as full_url,\n        \"date\" as arrival_date,\n        iata as arrival_iata,\n        icao as arrival_icao,\n        airport_name as arrival_airport_name,\n        departuretime_timeampm as departure_time_time_am_pm,\n        departuretime_time24 as departure_time_time_24,\n        arrivaltime_timeampm as arrival_time_time_am_pm,\n        arrivaltime_time24 as arrival_time_time_24,\n        carrier_fs as carrier_fs,\n        carrier_name as carrier_name,\n        carrier_flightnumber as carrier_flight_number,\n        airport_fs as departure_airport_fs,\n        airport_city as departure_airport_city,\n        iscodeshare as is_code_share\n    from\n        raw_arrivals\n\n)\n\nselect * from renamed_n_add_col", "database": "postgres", "schema": "public", "fqn": ["malaysia_airports_analysis", "staging", "stg_arrivals__malaysia"], "unique_id": "model.malaysia_airports_analysis.stg_arrivals__malaysia", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "staging/stg_arrivals__malaysia.sql", "original_file_path": "models/staging/stg_arrivals__malaysia.sql", "name": "stg_arrivals__malaysia", "resource_type": "model", "alias": "stg_arrivals__malaysia", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [{"sql": "{{ index(this, 'arrival_iata') }}", "transaction": true, "index": null}, {"sql": "{{ index(this, 'arrival_icao') }}", "transaction": true, "index": null}, {"sql": "{{ index(this, 'arrival_timestamp') }}", "transaction": true, "index": null}], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["arrivals"]}, "tags": ["arrivals"], "refs": [["raw_arrivals"]], "sources": [], "depends_on": {"nodes": ["seed.malaysia_airports_analysis.raw_arrivals"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/staging/stg_arrivals__malaysia.sql", "compiled": true, "compiled_sql": "\n\nwith raw_arrivals as (\n\n    select * from \"postgres\".\"public\".\"raw_arrivals\"\n\n),\n\nrenamed_n_add_col as (\n\n    select\n        sorttime as sort_time_utc,\n        sorttime + interval '8 hour' as arrival_timestamp,\n        operatedby as operated_by,\n        concat('https://www.flightstats.com/v2', url) as full_url,\n        \"date\" as arrival_date,\n        iata as arrival_iata,\n        icao as arrival_icao,\n        airport_name as arrival_airport_name,\n        departuretime_timeampm as departure_time_time_am_pm,\n        departuretime_time24 as departure_time_time_24,\n        arrivaltime_timeampm as arrival_time_time_am_pm,\n        arrivaltime_time24 as arrival_time_time_24,\n        carrier_fs as carrier_fs,\n        carrier_name as carrier_name,\n        carrier_flightnumber as carrier_flight_number,\n        airport_fs as departure_airport_fs,\n        airport_city as departure_airport_city,\n        iscodeshare as is_code_share\n    from\n        raw_arrivals\n\n)\n\nselect * from renamed_n_add_col", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith raw_arrivals as (\n\n    select * from \"postgres\".\"public\".\"raw_arrivals\"\n\n),\n\nrenamed_n_add_col as (\n\n    select\n        sorttime as sort_time_utc,\n        sorttime + interval '8 hour' as arrival_timestamp,\n        operatedby as operated_by,\n        concat('https://www.flightstats.com/v2', url) as full_url,\n        \"date\" as arrival_date,\n        iata as arrival_iata,\n        icao as arrival_icao,\n        airport_name as arrival_airport_name,\n        departuretime_timeampm as departure_time_time_am_pm,\n        departuretime_time24 as departure_time_time_24,\n        arrivaltime_timeampm as arrival_time_time_am_pm,\n        arrivaltime_time24 as arrival_time_time_24,\n        carrier_fs as carrier_fs,\n        carrier_name as carrier_name,\n        carrier_flightnumber as carrier_flight_number,\n        airport_fs as departure_airport_fs,\n        airport_city as departure_airport_city,\n        iscodeshare as is_code_share\n    from\n        raw_arrivals\n\n)\n\nselect * from renamed_n_add_col", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.04322504997253418, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-02-17T17:01:03.324967Z", "completed_at": "2020-02-17T17:01:03.354377Z"}, {"name": "execute", "started_at": "2020-02-17T17:01:03.355090Z", "completed_at": "2020-02-17T17:01:03.355096Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config(\n        tags=[\n            \"distances\",\n        ]\n    )\n}}\n\nwith stg_airports as (\n\n    select * from {{ ref('stg_airports') }}\n\n),\n\nbase_dist as (\n\n    select\n        a.\"name\" as a_name,\n        b.\"name\" as b_name,\n        a.latitude as a_lat,\n        a.longitude as a_lon,\n        b.latitude as b_lat,\n        b.longitude as b_lon,\n        (b.latitude - a.latitude) * pi() / 180 as lat_dist,\n        (b.longitude - a.longitude) * pi() / 180 as lon_dist\n    from\n        stg_airports a\n    cross join stg_airports b\n    where\n        a.country = 'Malaysia'\n        and b.country = 'Malaysia'\n    order by\n        1,\n        2\n\n),\n\nbase_area as (\n\n    select\n        *,\n        sin(lat_dist / 2) * sin(lat_dist / 2) + ((a_lat) * pi() / 180) * ((b_lat) * pi() / 180) * sin(lon_dist / 2) * sin(lon_dist / 2) as area\n    from\n        base_dist\n\n),\n\ndistance as (\n    select\n        a_name,\n        replace(b_name, ' ', '_') as b_name,\n        6371 * 2 * atan2(sqrt(area), sqrt(1-area) ) as distance_km\n    from\n        base_area\n    order by\n        1,\n        2\n\n)\nselect\n        *\nfrom\n\tdistance", "database": "postgres", "schema": "public", "fqn": ["malaysia_airports_analysis", "staging", "stg_airports__malaysia_distances"], "unique_id": "model.malaysia_airports_analysis.stg_airports__malaysia_distances", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "staging/stg_airports__malaysia_distances.sql", "original_file_path": "models/staging/stg_airports__malaysia_distances.sql", "name": "stg_airports__malaysia_distances", "resource_type": "model", "alias": "stg_airports__malaysia_distances", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["distances"]}, "tags": ["distances"], "refs": [["stg_airports"]], "sources": [], "depends_on": {"nodes": ["model.malaysia_airports_analysis.stg_airports"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/staging/stg_airports__malaysia_distances.sql", "compiled": true, "compiled_sql": "\n\nwith stg_airports as (\n\n    select * from \"postgres\".\"public\".\"stg_airports\"\n\n),\n\nbase_dist as (\n\n    select\n        a.\"name\" as a_name,\n        b.\"name\" as b_name,\n        a.latitude as a_lat,\n        a.longitude as a_lon,\n        b.latitude as b_lat,\n        b.longitude as b_lon,\n        (b.latitude - a.latitude) * pi() / 180 as lat_dist,\n        (b.longitude - a.longitude) * pi() / 180 as lon_dist\n    from\n        stg_airports a\n    cross join stg_airports b\n    where\n        a.country = 'Malaysia'\n        and b.country = 'Malaysia'\n    order by\n        1,\n        2\n\n),\n\nbase_area as (\n\n    select\n        *,\n        sin(lat_dist / 2) * sin(lat_dist / 2) + ((a_lat) * pi() / 180) * ((b_lat) * pi() / 180) * sin(lon_dist / 2) * sin(lon_dist / 2) as area\n    from\n        base_dist\n\n),\n\ndistance as (\n    select\n        a_name,\n        replace(b_name, ' ', '_') as b_name,\n        6371 * 2 * atan2(sqrt(area), sqrt(1-area) ) as distance_km\n    from\n        base_area\n    order by\n        1,\n        2\n\n)\nselect\n        *\nfrom\n\tdistance", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith stg_airports as (\n\n    select * from \"postgres\".\"public\".\"stg_airports\"\n\n),\n\nbase_dist as (\n\n    select\n        a.\"name\" as a_name,\n        b.\"name\" as b_name,\n        a.latitude as a_lat,\n        a.longitude as a_lon,\n        b.latitude as b_lat,\n        b.longitude as b_lon,\n        (b.latitude - a.latitude) * pi() / 180 as lat_dist,\n        (b.longitude - a.longitude) * pi() / 180 as lon_dist\n    from\n        stg_airports a\n    cross join stg_airports b\n    where\n        a.country = 'Malaysia'\n        and b.country = 'Malaysia'\n    order by\n        1,\n        2\n\n),\n\nbase_area as (\n\n    select\n        *,\n        sin(lat_dist / 2) * sin(lat_dist / 2) + ((a_lat) * pi() / 180) * ((b_lat) * pi() / 180) * sin(lon_dist / 2) * sin(lon_dist / 2) as area\n    from\n        base_dist\n\n),\n\ndistance as (\n    select\n        a_name,\n        replace(b_name, ' ', '_') as b_name,\n        6371 * 2 * atan2(sqrt(area), sqrt(1-area) ) as distance_km\n    from\n        base_area\n    order by\n        1,\n        2\n\n)\nselect\n        *\nfrom\n\tdistance", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.05585289001464844, "thread_id": "Thread-5", "timing": [{"name": "compile", "started_at": "2020-02-17T17:01:03.358045Z", "completed_at": "2020-02-17T17:01:03.412002Z"}, {"name": "execute", "started_at": "2020-02-17T17:01:03.412405Z", "completed_at": "2020-02-17T17:01:03.412415Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config(\n        materialized=\"table\",\n        tags=[\"arrivals\",]\n    )\n}}\n\nwith stg_airports as (\n\n    select * from {{ ref('stg_airports') }}\n\n),\n\nstg_arrivals__malaysia as (\n\n    select * from {{ ref('stg_arrivals__malaysia') }}\n\n),\n\naggregate as (\n\n    select\n        arrival_date,\n        arrival_iata,\n        arrival_icao,\n        arrival_airport_name,\n        count(*) as flight_count\n    from\n        stg_arrivals__malaysia\n    where\n        is_code_share is null\n    {{ group_by(4) }}\n    order by 5 desc\n\n),\n\nfinal as (\n\n    select\n        a.airport_id,\n        a.\"name\",\n        a.latitude,\n        a.longitude,\n        coalesce(b.flight_count, 0) as \"flight_count\"\n    from\n        stg_airports a\n    left join\n        aggregate b\n    on\n       a.iata = b.arrival_iata\n    where country = 'Malaysia'\n\n)\n\nselect * from final", "database": "postgres", "schema": "public", "fqn": ["malaysia_airports_analysis", "core", "fct_arrivals__malaysia_summary"], "unique_id": "model.malaysia_airports_analysis.fct_arrivals__malaysia_summary", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "core/fct_arrivals__malaysia_summary.sql", "original_file_path": "models/core/fct_arrivals__malaysia_summary.sql", "name": "fct_arrivals__malaysia_summary", "resource_type": "model", "alias": "fct_arrivals__malaysia_summary", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["arrivals"]}, "tags": ["arrivals"], "refs": [["stg_airports"], ["stg_arrivals__malaysia"]], "sources": [], "depends_on": {"nodes": ["model.malaysia_airports_analysis.stg_airports", "model.malaysia_airports_analysis.stg_arrivals__malaysia"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/core/fct_arrivals__malaysia_summary.sql", "compiled": true, "compiled_sql": "\n\nwith stg_airports as (\n\n    select * from \"postgres\".\"public\".\"stg_airports\"\n\n),\n\nstg_arrivals__malaysia as (\n\n    select * from \"postgres\".\"public\".\"stg_arrivals__malaysia\"\n\n),\n\naggregate as (\n\n    select\n        arrival_date,\n        arrival_iata,\n        arrival_icao,\n        arrival_airport_name,\n        count(*) as flight_count\n    from\n        stg_arrivals__malaysia\n    where\n        is_code_share is null\n    \n\n  GROUP BY\n   \n     1\n      , \n   \n     2\n      , \n   \n     3\n      , \n   \n     4\n     \n   \n\n\n    order by 5 desc\n\n),\n\nfinal as (\n\n    select\n        a.airport_id,\n        a.\"name\",\n        a.latitude,\n        a.longitude,\n        coalesce(b.flight_count, 0) as \"flight_count\"\n    from\n        stg_airports a\n    left join\n        aggregate b\n    on\n       a.iata = b.arrival_iata\n    where country = 'Malaysia'\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith stg_airports as (\n\n    select * from \"postgres\".\"public\".\"stg_airports\"\n\n),\n\nstg_arrivals__malaysia as (\n\n    select * from \"postgres\".\"public\".\"stg_arrivals__malaysia\"\n\n),\n\naggregate as (\n\n    select\n        arrival_date,\n        arrival_iata,\n        arrival_icao,\n        arrival_airport_name,\n        count(*) as flight_count\n    from\n        stg_arrivals__malaysia\n    where\n        is_code_share is null\n    \n\n  GROUP BY\n   \n     1\n      , \n   \n     2\n      , \n   \n     3\n      , \n   \n     4\n     \n   \n\n\n    order by 5 desc\n\n),\n\nfinal as (\n\n    select\n        a.airport_id,\n        a.\"name\",\n        a.latitude,\n        a.longitude,\n        coalesce(b.flight_count, 0) as \"flight_count\"\n    from\n        stg_airports a\n    left join\n        aggregate b\n    on\n       a.iata = b.arrival_iata\n    where country = 'Malaysia'\n\n)\n\nselect * from final", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.07476592063903809, "thread_id": "Thread-6", "timing": [{"name": "compile", "started_at": "2020-02-17T17:01:03.358205Z", "completed_at": "2020-02-17T17:01:03.431262Z"}, {"name": "execute", "started_at": "2020-02-17T17:01:03.431700Z", "completed_at": "2020-02-17T17:01:03.431710Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config({\n        \"materialized\" : \"table\",\n        \"pre-hook\": [\n            \"create extension if not exists tablefunc\",\n        ],\n        \"tags\": [\n            \"distances\",\n        ],\n    })\n}}\n\nwith stg_airports__malaysia_distances as (\n\n    select * from {{ ref('stg_airports__malaysia_distances') }}\n\n)\n\nselect\n    a_name,\n    {{ get_b_name_columns() }}\nfrom\n    crosstab(\n        'select\n            a_name,\n            b_name,\n            distance_km\n        from stg_airports__malaysia_distances',\n        $$VALUES {{ get_b_name_value() }} $$\n    ) as ct(a_name text, {{ get_b_name_type() }})\norder by 1", "database": "postgres", "schema": "public", "fqn": ["malaysia_airports_analysis", "core", "fct_airports__malaysia_distances_km"], "unique_id": "model.malaysia_airports_analysis.fct_airports__malaysia_distances_km", "package_name": "malaysia_airports_analysis", "root_path": "/Users/blee/github-personal-1/simple-airports-analysis/dbt", "path": "core/fct_airports__malaysia_distances_km.sql", "original_file_path": "models/core/fct_airports__malaysia_distances_km.sql", "name": "fct_airports__malaysia_distances_km", "resource_type": "model", "alias": "fct_airports__malaysia_distances_km", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [{"sql": "create extension if not exists tablefunc", "transaction": true, "index": null}], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["distances"]}, "tags": ["distances"], "refs": [["stg_airports__malaysia_distances"], ["stg_airports__malaysia_distances"], ["stg_airports__malaysia_distances"], ["stg_airports__malaysia_distances"]], "sources": [], "depends_on": {"nodes": ["model.malaysia_airports_analysis.stg_airports__malaysia_distances", "model.malaysia_airports_analysis.stg_airports__malaysia_distances", "model.malaysia_airports_analysis.stg_airports__malaysia_distances", "model.malaysia_airports_analysis.stg_airports__malaysia_distances"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/malaysia_airports_analysis/core/fct_airports__malaysia_distances_km.sql", "compiled": true, "compiled_sql": "\n\nwith stg_airports__malaysia_distances as (\n\n    select * from \"postgres\".\"public\".\"stg_airports__malaysia_distances\"\n\n)\n\nselect\n    a_name,\n    \n    \n    coalesce( Bakalalan_Airport , 0) as \"Bakalalan_Airport\"\n        ,coalesce( Bario_Airport , 0) as \"Bario_Airport\"\n        ,coalesce( Belaga_Airport , 0) as \"Belaga_Airport\"\n        ,coalesce( Bintulu_Airport , 0) as \"Bintulu_Airport\"\n        ,coalesce( Butterworth_Airport , 0) as \"Butterworth_Airport\"\n        ,coalesce( Kerteh_Airport , 0) as \"Kerteh_Airport\"\n        ,coalesce( Kluang_Airport , 0) as \"Kluang_Airport\"\n        ,coalesce( Kota_Kinabalu_International_Airport , 0) as \"Kota_Kinabalu_International_Airport\"\n        ,coalesce( Kuala_Lumpur_International_Airport , 0) as \"Kuala_Lumpur_International_Airport\"\n        ,coalesce( Kuantan_Airport , 0) as \"Kuantan_Airport\"\n        ,coalesce( Kuching_International_Airport , 0) as \"Kuching_International_Airport\"\n        ,coalesce( Kudat_Airport , 0) as \"Kudat_Airport\"\n        ,coalesce( Labuan_Airport , 0) as \"Labuan_Airport\"\n        ,coalesce( Lahad_Datu_Airport , 0) as \"Lahad_Datu_Airport\"\n        ,coalesce( Langkawi_International_Airport , 0) as \"Langkawi_International_Airport\"\n        ,coalesce( Lawas_Airport , 0) as \"Lawas_Airport\"\n        ,coalesce( Limbang_Airport , 0) as \"Limbang_Airport\"\n        ,coalesce( Long_Akah_Airport , 0) as \"Long_Akah_Airport\"\n        ,coalesce( Long_Lellang_Airport , 0) as \"Long_Lellang_Airport\"\n        ,coalesce( Long_Seridan_Airport , 0) as \"Long_Seridan_Airport\"\n        ,coalesce( LTS_Pulau_Redang_Airport , 0) as \"LTS_Pulau_Redang_Airport\"\n        ,coalesce( Malacca_Airport , 0) as \"Malacca_Airport\"\n        ,coalesce( Marudi_Airport , 0) as \"Marudi_Airport\"\n        ,coalesce( Miri_Airport , 0) as \"Miri_Airport\"\n        ,coalesce( Mukah_Airport , 0) as \"Mukah_Airport\"\n        ,coalesce( Mulu_Airport , 0) as \"Mulu_Airport\"\n        ,coalesce( Penang_International_Airport , 0) as \"Penang_International_Airport\"\n        ,coalesce( Pulau_Pangkor_Airport , 0) as \"Pulau_Pangkor_Airport\"\n        ,coalesce( Pulau_Tioman_Airport , 0) as \"Pulau_Tioman_Airport\"\n        ,coalesce( Sandakan_Airport , 0) as \"Sandakan_Airport\"\n        ,coalesce( Senai_International_Airport , 0) as \"Senai_International_Airport\"\n        ,coalesce( Sibu_Airport , 0) as \"Sibu_Airport\"\n        ,coalesce( Simpang_Airport , 0) as \"Simpang_Airport\"\n        ,coalesce( Sultan_Abdul_Aziz_Shah_International_Airport , 0) as \"Sultan_Abdul_Aziz_Shah_International_Airport\"\n        ,coalesce( Sultan_Abdul_Halim_Airport , 0) as \"Sultan_Abdul_Halim_Airport\"\n        ,coalesce( Sultan_Azlan_Shah_Airport , 0) as \"Sultan_Azlan_Shah_Airport\"\n        ,coalesce( Sultan_Ismail_Petra_Airport , 0) as \"Sultan_Ismail_Petra_Airport\"\n        ,coalesce( Sultan_Mahmud_Airport , 0) as \"Sultan_Mahmud_Airport\"\n        ,coalesce( Tawau_Airport , 0) as \"Tawau_Airport\"\n        ,coalesce( Tomanggong_Airport , 0) as \"Tomanggong_Airport\"\nfrom\n    crosstab(\n        'select\n            a_name,\n            b_name,\n            distance_km\n        from stg_airports__malaysia_distances',\n        $$VALUES \n    \n    ('Bakalalan_Airport')\n        ,('Bario_Airport')\n        ,('Belaga_Airport')\n        ,('Bintulu_Airport')\n        ,('Butterworth_Airport')\n        ,('Kerteh_Airport')\n        ,('Kluang_Airport')\n        ,('Kota_Kinabalu_International_Airport')\n        ,('Kuala_Lumpur_International_Airport')\n        ,('Kuantan_Airport')\n        ,('Kuching_International_Airport')\n        ,('Kudat_Airport')\n        ,('Labuan_Airport')\n        ,('Lahad_Datu_Airport')\n        ,('Langkawi_International_Airport')\n        ,('Lawas_Airport')\n        ,('Limbang_Airport')\n        ,('Long_Akah_Airport')\n        ,('Long_Lellang_Airport')\n        ,('Long_Seridan_Airport')\n        ,('LTS_Pulau_Redang_Airport')\n        ,('Malacca_Airport')\n        ,('Marudi_Airport')\n        ,('Miri_Airport')\n        ,('Mukah_Airport')\n        ,('Mulu_Airport')\n        ,('Penang_International_Airport')\n        ,('Pulau_Pangkor_Airport')\n        ,('Pulau_Tioman_Airport')\n        ,('Sandakan_Airport')\n        ,('Senai_International_Airport')\n        ,('Sibu_Airport')\n        ,('Simpang_Airport')\n        ,('Sultan_Abdul_Aziz_Shah_International_Airport')\n        ,('Sultan_Abdul_Halim_Airport')\n        ,('Sultan_Azlan_Shah_Airport')\n        ,('Sultan_Ismail_Petra_Airport')\n        ,('Sultan_Mahmud_Airport')\n        ,('Tawau_Airport')\n        ,('Tomanggong_Airport') $$\n    ) as ct(a_name text, \n    \n    Bakalalan_Airport float8\n        ,Bario_Airport float8\n        ,Belaga_Airport float8\n        ,Bintulu_Airport float8\n        ,Butterworth_Airport float8\n        ,Kerteh_Airport float8\n        ,Kluang_Airport float8\n        ,Kota_Kinabalu_International_Airport float8\n        ,Kuala_Lumpur_International_Airport float8\n        ,Kuantan_Airport float8\n        ,Kuching_International_Airport float8\n        ,Kudat_Airport float8\n        ,Labuan_Airport float8\n        ,Lahad_Datu_Airport float8\n        ,Langkawi_International_Airport float8\n        ,Lawas_Airport float8\n        ,Limbang_Airport float8\n        ,Long_Akah_Airport float8\n        ,Long_Lellang_Airport float8\n        ,Long_Seridan_Airport float8\n        ,LTS_Pulau_Redang_Airport float8\n        ,Malacca_Airport float8\n        ,Marudi_Airport float8\n        ,Miri_Airport float8\n        ,Mukah_Airport float8\n        ,Mulu_Airport float8\n        ,Penang_International_Airport float8\n        ,Pulau_Pangkor_Airport float8\n        ,Pulau_Tioman_Airport float8\n        ,Sandakan_Airport float8\n        ,Senai_International_Airport float8\n        ,Sibu_Airport float8\n        ,Simpang_Airport float8\n        ,Sultan_Abdul_Aziz_Shah_International_Airport float8\n        ,Sultan_Abdul_Halim_Airport float8\n        ,Sultan_Azlan_Shah_Airport float8\n        ,Sultan_Ismail_Petra_Airport float8\n        ,Sultan_Mahmud_Airport float8\n        ,Tawau_Airport float8\n        ,Tomanggong_Airport float8)\norder by 1", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith stg_airports__malaysia_distances as (\n\n    select * from \"postgres\".\"public\".\"stg_airports__malaysia_distances\"\n\n)\n\nselect\n    a_name,\n    \n    \n    coalesce( Bakalalan_Airport , 0) as \"Bakalalan_Airport\"\n        ,coalesce( Bario_Airport , 0) as \"Bario_Airport\"\n        ,coalesce( Belaga_Airport , 0) as \"Belaga_Airport\"\n        ,coalesce( Bintulu_Airport , 0) as \"Bintulu_Airport\"\n        ,coalesce( Butterworth_Airport , 0) as \"Butterworth_Airport\"\n        ,coalesce( Kerteh_Airport , 0) as \"Kerteh_Airport\"\n        ,coalesce( Kluang_Airport , 0) as \"Kluang_Airport\"\n        ,coalesce( Kota_Kinabalu_International_Airport , 0) as \"Kota_Kinabalu_International_Airport\"\n        ,coalesce( Kuala_Lumpur_International_Airport , 0) as \"Kuala_Lumpur_International_Airport\"\n        ,coalesce( Kuantan_Airport , 0) as \"Kuantan_Airport\"\n        ,coalesce( Kuching_International_Airport , 0) as \"Kuching_International_Airport\"\n        ,coalesce( Kudat_Airport , 0) as \"Kudat_Airport\"\n        ,coalesce( Labuan_Airport , 0) as \"Labuan_Airport\"\n        ,coalesce( Lahad_Datu_Airport , 0) as \"Lahad_Datu_Airport\"\n        ,coalesce( Langkawi_International_Airport , 0) as \"Langkawi_International_Airport\"\n        ,coalesce( Lawas_Airport , 0) as \"Lawas_Airport\"\n        ,coalesce( Limbang_Airport , 0) as \"Limbang_Airport\"\n        ,coalesce( Long_Akah_Airport , 0) as \"Long_Akah_Airport\"\n        ,coalesce( Long_Lellang_Airport , 0) as \"Long_Lellang_Airport\"\n        ,coalesce( Long_Seridan_Airport , 0) as \"Long_Seridan_Airport\"\n        ,coalesce( LTS_Pulau_Redang_Airport , 0) as \"LTS_Pulau_Redang_Airport\"\n        ,coalesce( Malacca_Airport , 0) as \"Malacca_Airport\"\n        ,coalesce( Marudi_Airport , 0) as \"Marudi_Airport\"\n        ,coalesce( Miri_Airport , 0) as \"Miri_Airport\"\n        ,coalesce( Mukah_Airport , 0) as \"Mukah_Airport\"\n        ,coalesce( Mulu_Airport , 0) as \"Mulu_Airport\"\n        ,coalesce( Penang_International_Airport , 0) as \"Penang_International_Airport\"\n        ,coalesce( Pulau_Pangkor_Airport , 0) as \"Pulau_Pangkor_Airport\"\n        ,coalesce( Pulau_Tioman_Airport , 0) as \"Pulau_Tioman_Airport\"\n        ,coalesce( Sandakan_Airport , 0) as \"Sandakan_Airport\"\n        ,coalesce( Senai_International_Airport , 0) as \"Senai_International_Airport\"\n        ,coalesce( Sibu_Airport , 0) as \"Sibu_Airport\"\n        ,coalesce( Simpang_Airport , 0) as \"Simpang_Airport\"\n        ,coalesce( Sultan_Abdul_Aziz_Shah_International_Airport , 0) as \"Sultan_Abdul_Aziz_Shah_International_Airport\"\n        ,coalesce( Sultan_Abdul_Halim_Airport , 0) as \"Sultan_Abdul_Halim_Airport\"\n        ,coalesce( Sultan_Azlan_Shah_Airport , 0) as \"Sultan_Azlan_Shah_Airport\"\n        ,coalesce( Sultan_Ismail_Petra_Airport , 0) as \"Sultan_Ismail_Petra_Airport\"\n        ,coalesce( Sultan_Mahmud_Airport , 0) as \"Sultan_Mahmud_Airport\"\n        ,coalesce( Tawau_Airport , 0) as \"Tawau_Airport\"\n        ,coalesce( Tomanggong_Airport , 0) as \"Tomanggong_Airport\"\nfrom\n    crosstab(\n        'select\n            a_name,\n            b_name,\n            distance_km\n        from stg_airports__malaysia_distances',\n        $$VALUES \n    \n    ('Bakalalan_Airport')\n        ,('Bario_Airport')\n        ,('Belaga_Airport')\n        ,('Bintulu_Airport')\n        ,('Butterworth_Airport')\n        ,('Kerteh_Airport')\n        ,('Kluang_Airport')\n        ,('Kota_Kinabalu_International_Airport')\n        ,('Kuala_Lumpur_International_Airport')\n        ,('Kuantan_Airport')\n        ,('Kuching_International_Airport')\n        ,('Kudat_Airport')\n        ,('Labuan_Airport')\n        ,('Lahad_Datu_Airport')\n        ,('Langkawi_International_Airport')\n        ,('Lawas_Airport')\n        ,('Limbang_Airport')\n        ,('Long_Akah_Airport')\n        ,('Long_Lellang_Airport')\n        ,('Long_Seridan_Airport')\n        ,('LTS_Pulau_Redang_Airport')\n        ,('Malacca_Airport')\n        ,('Marudi_Airport')\n        ,('Miri_Airport')\n        ,('Mukah_Airport')\n        ,('Mulu_Airport')\n        ,('Penang_International_Airport')\n        ,('Pulau_Pangkor_Airport')\n        ,('Pulau_Tioman_Airport')\n        ,('Sandakan_Airport')\n        ,('Senai_International_Airport')\n        ,('Sibu_Airport')\n        ,('Simpang_Airport')\n        ,('Sultan_Abdul_Aziz_Shah_International_Airport')\n        ,('Sultan_Abdul_Halim_Airport')\n        ,('Sultan_Azlan_Shah_Airport')\n        ,('Sultan_Ismail_Petra_Airport')\n        ,('Sultan_Mahmud_Airport')\n        ,('Tawau_Airport')\n        ,('Tomanggong_Airport') $$\n    ) as ct(a_name text, \n    \n    Bakalalan_Airport float8\n        ,Bario_Airport float8\n        ,Belaga_Airport float8\n        ,Bintulu_Airport float8\n        ,Butterworth_Airport float8\n        ,Kerteh_Airport float8\n        ,Kluang_Airport float8\n        ,Kota_Kinabalu_International_Airport float8\n        ,Kuala_Lumpur_International_Airport float8\n        ,Kuantan_Airport float8\n        ,Kuching_International_Airport float8\n        ,Kudat_Airport float8\n        ,Labuan_Airport float8\n        ,Lahad_Datu_Airport float8\n        ,Langkawi_International_Airport float8\n        ,Lawas_Airport float8\n        ,Limbang_Airport float8\n        ,Long_Akah_Airport float8\n        ,Long_Lellang_Airport float8\n        ,Long_Seridan_Airport float8\n        ,LTS_Pulau_Redang_Airport float8\n        ,Malacca_Airport float8\n        ,Marudi_Airport float8\n        ,Miri_Airport float8\n        ,Mukah_Airport float8\n        ,Mulu_Airport float8\n        ,Penang_International_Airport float8\n        ,Pulau_Pangkor_Airport float8\n        ,Pulau_Tioman_Airport float8\n        ,Sandakan_Airport float8\n        ,Senai_International_Airport float8\n        ,Sibu_Airport float8\n        ,Simpang_Airport float8\n        ,Sultan_Abdul_Aziz_Shah_International_Airport float8\n        ,Sultan_Abdul_Halim_Airport float8\n        ,Sultan_Azlan_Shah_Airport float8\n        ,Sultan_Ismail_Petra_Airport float8\n        ,Sultan_Mahmud_Airport float8\n        ,Tawau_Airport float8\n        ,Tomanggong_Airport float8)\norder by 1", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.37542295455932617, "thread_id": "Thread-7", "timing": [{"name": "compile", "started_at": "2020-02-17T17:01:03.413979Z", "completed_at": "2020-02-17T17:01:03.786118Z"}, {"name": "execute", "started_at": "2020-02-17T17:01:03.786579Z", "completed_at": "2020-02-17T17:01:03.786589Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-02-17T17:01:03.825155Z", "elapsed_time": 0.5392842292785645}